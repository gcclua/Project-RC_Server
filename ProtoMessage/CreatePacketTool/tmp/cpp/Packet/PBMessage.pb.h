// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PBMessage.proto

#ifndef PROTOBUF_PBMessage_2eproto__INCLUDED
#define PROTOBUF_PBMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PBMessage_2eproto();
void protobuf_AssignDesc_PBMessage_2eproto();
void protobuf_ShutdownFile_PBMessage_2eproto();

class CG_LOGIN;
class GC_LOGIN_RET;
class CG_CONNECTED_HEARTBEAT;
class GC_CONNECTED_HEARTBEAT;
class CG_REQ_NEAR_LIST;
class GC_NEAR_MARCHLIST;
class CG_CHAT;
class GC_CHAT;
class GC_NOTICE;
class GC_UPDATE_SCENE_INSTACTIVATION;
class GS_CONNECTED_HEARTBEAT;
class SG_CONNECTED_HEARTBEAT;
class CG_MOVE;
class GC_MOVE;
class GC_STOP;
class GC_TELEMOVE;
class GC_RET_USE_SKILL;
class GC_UPDATE_ANIMATION_STATE;
class GC_DELETE_OBJ;
class GC_ATTACKFLY;
class GC_FORCE_SETPOS;
class GC_UPDATE_NEEDIMPACTINFO;
class GC_PLAY_EFFECT;
class GC_REMOVEEFFECT;
class CG_FIGHT;
class CG_LEAVE_COPYSCENE;

enum CG_LOGIN_VALIDATETYPE {
  CG_LOGIN_VALIDATETYPE_TEST = 0,
  CG_LOGIN_VALIDATETYPE_CYOU = 1
};
bool CG_LOGIN_VALIDATETYPE_IsValid(int value);
const CG_LOGIN_VALIDATETYPE CG_LOGIN_VALIDATETYPE_VALIDATETYPE_MIN = CG_LOGIN_VALIDATETYPE_TEST;
const CG_LOGIN_VALIDATETYPE CG_LOGIN_VALIDATETYPE_VALIDATETYPE_MAX = CG_LOGIN_VALIDATETYPE_CYOU;
const int CG_LOGIN_VALIDATETYPE_VALIDATETYPE_ARRAYSIZE = CG_LOGIN_VALIDATETYPE_VALIDATETYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* CG_LOGIN_VALIDATETYPE_descriptor();
inline const ::std::string& CG_LOGIN_VALIDATETYPE_Name(CG_LOGIN_VALIDATETYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    CG_LOGIN_VALIDATETYPE_descriptor(), value);
}
inline bool CG_LOGIN_VALIDATETYPE_Parse(
    const ::std::string& name, CG_LOGIN_VALIDATETYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CG_LOGIN_VALIDATETYPE>(
    CG_LOGIN_VALIDATETYPE_descriptor(), name, value);
}
enum GC_LOGIN_RET_LOGINRESULT {
  GC_LOGIN_RET_LOGINRESULT_SUCCESS = 1,
  GC_LOGIN_RET_LOGINRESULT_ACCOUNTVERIFYFAIL = 2,
  GC_LOGIN_RET_LOGINRESULT_READROLELISTFAIL = 3,
  GC_LOGIN_RET_LOGINRESULT_ALREADYLOGIN = 4,
  GC_LOGIN_RET_LOGINRESULT_QUEUEFULL = 5,
  GC_LOGIN_RET_LOGINRESULT_NEEDFORCEENTER = 6,
  GC_LOGIN_RET_LOGINRESULT_PACKETNOTMATCH = 7,
  GC_LOGIN_RET_LOGINRESULT_VERSIONNOTMATCH = 8
};
bool GC_LOGIN_RET_LOGINRESULT_IsValid(int value);
const GC_LOGIN_RET_LOGINRESULT GC_LOGIN_RET_LOGINRESULT_LOGINRESULT_MIN = GC_LOGIN_RET_LOGINRESULT_SUCCESS;
const GC_LOGIN_RET_LOGINRESULT GC_LOGIN_RET_LOGINRESULT_LOGINRESULT_MAX = GC_LOGIN_RET_LOGINRESULT_VERSIONNOTMATCH;
const int GC_LOGIN_RET_LOGINRESULT_LOGINRESULT_ARRAYSIZE = GC_LOGIN_RET_LOGINRESULT_LOGINRESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* GC_LOGIN_RET_LOGINRESULT_descriptor();
inline const ::std::string& GC_LOGIN_RET_LOGINRESULT_Name(GC_LOGIN_RET_LOGINRESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    GC_LOGIN_RET_LOGINRESULT_descriptor(), value);
}
inline bool GC_LOGIN_RET_LOGINRESULT_Parse(
    const ::std::string& name, GC_LOGIN_RET_LOGINRESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GC_LOGIN_RET_LOGINRESULT>(
    GC_LOGIN_RET_LOGINRESULT_descriptor(), name, value);
}
enum GC_LOGIN_RET_VALIDATERESULT {
  GC_LOGIN_RET_VALIDATERESULT_OK = 0,
  GC_LOGIN_RET_VALIDATERESULT_FAIL_VALIDATETYPEERROR = 1,
  GC_LOGIN_RET_VALIDATERESULT_FAIL_PERFORM = 2,
  GC_LOGIN_RET_VALIDATERESULT_FAIL_OPCODE = 3,
  GC_LOGIN_RET_VALIDATERESULT_FAIL_TAG = 4,
  GC_LOGIN_RET_VALIDATERESULT_FAIL_STATE = 5,
  GC_LOGIN_RET_VALIDATERESULT_FAIL_DATA_STATUS = 6,
  GC_LOGIN_RET_VALIDATERESULT_FAIL_CHANNELID = 7,
  GC_LOGIN_RET_VALIDATERESULT_FAIL_BLOCKED = 8
};
bool GC_LOGIN_RET_VALIDATERESULT_IsValid(int value);
const GC_LOGIN_RET_VALIDATERESULT GC_LOGIN_RET_VALIDATERESULT_VALIDATERESULT_MIN = GC_LOGIN_RET_VALIDATERESULT_OK;
const GC_LOGIN_RET_VALIDATERESULT GC_LOGIN_RET_VALIDATERESULT_VALIDATERESULT_MAX = GC_LOGIN_RET_VALIDATERESULT_FAIL_BLOCKED;
const int GC_LOGIN_RET_VALIDATERESULT_VALIDATERESULT_ARRAYSIZE = GC_LOGIN_RET_VALIDATERESULT_VALIDATERESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* GC_LOGIN_RET_VALIDATERESULT_descriptor();
inline const ::std::string& GC_LOGIN_RET_VALIDATERESULT_Name(GC_LOGIN_RET_VALIDATERESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    GC_LOGIN_RET_VALIDATERESULT_descriptor(), value);
}
inline bool GC_LOGIN_RET_VALIDATERESULT_Parse(
    const ::std::string& name, GC_LOGIN_RET_VALIDATERESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GC_LOGIN_RET_VALIDATERESULT>(
    GC_LOGIN_RET_VALIDATERESULT_descriptor(), name, value);
}
enum CG_CHAT_CHATTYPE {
  CG_CHAT_CHATTYPE_CHAT_TYPE_INVALID = 0,
  CG_CHAT_CHATTYPE_CHAT_TYPE_NORMAL = 1,
  CG_CHAT_CHATTYPE_CHAT_TYPE_WORLD = 2,
  CG_CHAT_CHATTYPE_CHAT_TYPE_SYSTEM = 3,
  CG_CHAT_CHATTYPE_CHAT_TYPE_LOUDSPEAKER = 4,
  CG_CHAT_CHATTYPE_CHAT_TYPE_FRIEND = 5
};
bool CG_CHAT_CHATTYPE_IsValid(int value);
const CG_CHAT_CHATTYPE CG_CHAT_CHATTYPE_CHATTYPE_MIN = CG_CHAT_CHATTYPE_CHAT_TYPE_INVALID;
const CG_CHAT_CHATTYPE CG_CHAT_CHATTYPE_CHATTYPE_MAX = CG_CHAT_CHATTYPE_CHAT_TYPE_FRIEND;
const int CG_CHAT_CHATTYPE_CHATTYPE_ARRAYSIZE = CG_CHAT_CHATTYPE_CHATTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* CG_CHAT_CHATTYPE_descriptor();
inline const ::std::string& CG_CHAT_CHATTYPE_Name(CG_CHAT_CHATTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    CG_CHAT_CHATTYPE_descriptor(), value);
}
inline bool CG_CHAT_CHATTYPE_Parse(
    const ::std::string& name, CG_CHAT_CHATTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CG_CHAT_CHATTYPE>(
    CG_CHAT_CHATTYPE_descriptor(), name, value);
}
enum GC_CHAT_CHATTYPE {
  GC_CHAT_CHATTYPE_CHAT_TYPE_INVALID = 0,
  GC_CHAT_CHATTYPE_CHAT_TYPE_NORMAL = 1,
  GC_CHAT_CHATTYPE_CHAT_TYPE_WORLD = 2,
  GC_CHAT_CHATTYPE_CHAT_TYPE_SYSTEM = 3,
  GC_CHAT_CHATTYPE_CHAT_TYPE_LOUDSPEAKER = 4,
  GC_CHAT_CHATTYPE_CHAT_TYPE_FRIEND = 5
};
bool GC_CHAT_CHATTYPE_IsValid(int value);
const GC_CHAT_CHATTYPE GC_CHAT_CHATTYPE_CHATTYPE_MIN = GC_CHAT_CHATTYPE_CHAT_TYPE_INVALID;
const GC_CHAT_CHATTYPE GC_CHAT_CHATTYPE_CHATTYPE_MAX = GC_CHAT_CHATTYPE_CHAT_TYPE_FRIEND;
const int GC_CHAT_CHATTYPE_CHATTYPE_ARRAYSIZE = GC_CHAT_CHATTYPE_CHATTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* GC_CHAT_CHATTYPE_descriptor();
inline const ::std::string& GC_CHAT_CHATTYPE_Name(GC_CHAT_CHATTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    GC_CHAT_CHATTYPE_descriptor(), value);
}
inline bool GC_CHAT_CHATTYPE_Parse(
    const ::std::string& name, GC_CHAT_CHATTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GC_CHAT_CHATTYPE>(
    GC_CHAT_CHATTYPE_descriptor(), name, value);
}
// ===================================================================

class CG_LOGIN : public ::google::protobuf::Message {
 public:
  CG_LOGIN();
  virtual ~CG_LOGIN();

  CG_LOGIN(const CG_LOGIN& from);

  inline CG_LOGIN& operator=(const CG_LOGIN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_LOGIN& default_instance();

  void Swap(CG_LOGIN* other);

  // implements Message ----------------------------------------------

  CG_LOGIN* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_LOGIN& from);
  void MergeFrom(const CG_LOGIN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CG_LOGIN_VALIDATETYPE VALIDATETYPE;
  static const VALIDATETYPE TEST = CG_LOGIN_VALIDATETYPE_TEST;
  static const VALIDATETYPE CYOU = CG_LOGIN_VALIDATETYPE_CYOU;
  static inline bool VALIDATETYPE_IsValid(int value) {
    return CG_LOGIN_VALIDATETYPE_IsValid(value);
  }
  static const VALIDATETYPE VALIDATETYPE_MIN =
    CG_LOGIN_VALIDATETYPE_VALIDATETYPE_MIN;
  static const VALIDATETYPE VALIDATETYPE_MAX =
    CG_LOGIN_VALIDATETYPE_VALIDATETYPE_MAX;
  static const int VALIDATETYPE_ARRAYSIZE =
    CG_LOGIN_VALIDATETYPE_VALIDATETYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VALIDATETYPE_descriptor() {
    return CG_LOGIN_VALIDATETYPE_descriptor();
  }
  static inline const ::std::string& VALIDATETYPE_Name(VALIDATETYPE value) {
    return CG_LOGIN_VALIDATETYPE_Name(value);
  }
  static inline bool VALIDATETYPE_Parse(const ::std::string& name,
      VALIDATETYPE* value) {
    return CG_LOGIN_VALIDATETYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 vtype = 1;
  inline bool has_vtype() const;
  inline void clear_vtype();
  static const int kVtypeFieldNumber = 1;
  inline ::google::protobuf::int32 vtype() const;
  inline void set_vtype(::google::protobuf::int32 value);

  // required int32 gameversion = 2;
  inline bool has_gameversion() const;
  inline void clear_gameversion();
  static const int kGameversionFieldNumber = 2;
  inline ::google::protobuf::int32 gameversion() const;
  inline void set_gameversion(::google::protobuf::int32 value);

  // required int32 programversion = 3;
  inline bool has_programversion() const;
  inline void clear_programversion();
  static const int kProgramversionFieldNumber = 3;
  inline ::google::protobuf::int32 programversion() const;
  inline void set_programversion(::google::protobuf::int32 value);

  // required int32 publicresourceversion = 4;
  inline bool has_publicresourceversion() const;
  inline void clear_publicresourceversion();
  static const int kPublicresourceversionFieldNumber = 4;
  inline ::google::protobuf::int32 publicresourceversion() const;
  inline void set_publicresourceversion(::google::protobuf::int32 value);

  // required int32 maxpacketid = 5;
  inline bool has_maxpacketid() const;
  inline void clear_maxpacketid();
  static const int kMaxpacketidFieldNumber = 5;
  inline ::google::protobuf::int32 maxpacketid() const;
  inline void set_maxpacketid(::google::protobuf::int32 value);

  // required int32 forceenter = 6;
  inline bool has_forceenter() const;
  inline void clear_forceenter();
  static const int kForceenterFieldNumber = 6;
  inline ::google::protobuf::int32 forceenter() const;
  inline void set_forceenter(::google::protobuf::int32 value);

  // required string deviceid = 7;
  inline bool has_deviceid() const;
  inline void clear_deviceid();
  static const int kDeviceidFieldNumber = 7;
  inline const ::std::string& deviceid() const;
  inline void set_deviceid(const ::std::string& value);
  inline void set_deviceid(const char* value);
  inline void set_deviceid(const char* value, size_t size);
  inline ::std::string* mutable_deviceid();
  inline ::std::string* release_deviceid();
  inline void set_allocated_deviceid(::std::string* deviceid);

  // required string devicetype = 8;
  inline bool has_devicetype() const;
  inline void clear_devicetype();
  static const int kDevicetypeFieldNumber = 8;
  inline const ::std::string& devicetype() const;
  inline void set_devicetype(const ::std::string& value);
  inline void set_devicetype(const char* value);
  inline void set_devicetype(const char* value, size_t size);
  inline ::std::string* mutable_devicetype();
  inline ::std::string* release_devicetype();
  inline void set_allocated_devicetype(::std::string* devicetype);

  // required string deviceversion = 9;
  inline bool has_deviceversion() const;
  inline void clear_deviceversion();
  static const int kDeviceversionFieldNumber = 9;
  inline const ::std::string& deviceversion() const;
  inline void set_deviceversion(const ::std::string& value);
  inline void set_deviceversion(const char* value);
  inline void set_deviceversion(const char* value, size_t size);
  inline ::std::string* mutable_deviceversion();
  inline ::std::string* release_deviceversion();
  inline void set_allocated_deviceversion(::std::string* deviceversion);

  // required string account = 10;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 10;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required string validateinfo = 11;
  inline bool has_validateinfo() const;
  inline void clear_validateinfo();
  static const int kValidateinfoFieldNumber = 11;
  inline const ::std::string& validateinfo() const;
  inline void set_validateinfo(const ::std::string& value);
  inline void set_validateinfo(const char* value);
  inline void set_validateinfo(const char* value, size_t size);
  inline ::std::string* mutable_validateinfo();
  inline ::std::string* release_validateinfo();
  inline void set_allocated_validateinfo(::std::string* validateinfo);

  // required string channelid = 12;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 12;
  inline const ::std::string& channelid() const;
  inline void set_channelid(const ::std::string& value);
  inline void set_channelid(const char* value);
  inline void set_channelid(const char* value, size_t size);
  inline ::std::string* mutable_channelid();
  inline ::std::string* release_channelid();
  inline void set_allocated_channelid(::std::string* channelid);

  // required string mediachannel = 13;
  inline bool has_mediachannel() const;
  inline void clear_mediachannel();
  static const int kMediachannelFieldNumber = 13;
  inline const ::std::string& mediachannel() const;
  inline void set_mediachannel(const ::std::string& value);
  inline void set_mediachannel(const char* value);
  inline void set_mediachannel(const char* value, size_t size);
  inline ::std::string* mutable_mediachannel();
  inline ::std::string* release_mediachannel();
  inline void set_allocated_mediachannel(::std::string* mediachannel);

  // required int32 rapidvalidatecode = 14;
  inline bool has_rapidvalidatecode() const;
  inline void clear_rapidvalidatecode();
  static const int kRapidvalidatecodeFieldNumber = 14;
  inline ::google::protobuf::int32 rapidvalidatecode() const;
  inline void set_rapidvalidatecode(::google::protobuf::int32 value);

  // required int32 reservedint1 = 15;
  inline bool has_reservedint1() const;
  inline void clear_reservedint1();
  static const int kReservedint1FieldNumber = 15;
  inline ::google::protobuf::int32 reservedint1() const;
  inline void set_reservedint1(::google::protobuf::int32 value);

  // required int32 reservedint2 = 16;
  inline bool has_reservedint2() const;
  inline void clear_reservedint2();
  static const int kReservedint2FieldNumber = 16;
  inline ::google::protobuf::int32 reservedint2() const;
  inline void set_reservedint2(::google::protobuf::int32 value);

  // required int32 reservedint3 = 17;
  inline bool has_reservedint3() const;
  inline void clear_reservedint3();
  static const int kReservedint3FieldNumber = 17;
  inline ::google::protobuf::int32 reservedint3() const;
  inline void set_reservedint3(::google::protobuf::int32 value);

  // required int32 reservedint4 = 18;
  inline bool has_reservedint4() const;
  inline void clear_reservedint4();
  static const int kReservedint4FieldNumber = 18;
  inline ::google::protobuf::int32 reservedint4() const;
  inline void set_reservedint4(::google::protobuf::int32 value);

  // required string reservedstring1 = 19;
  inline bool has_reservedstring1() const;
  inline void clear_reservedstring1();
  static const int kReservedstring1FieldNumber = 19;
  inline const ::std::string& reservedstring1() const;
  inline void set_reservedstring1(const ::std::string& value);
  inline void set_reservedstring1(const char* value);
  inline void set_reservedstring1(const char* value, size_t size);
  inline ::std::string* mutable_reservedstring1();
  inline ::std::string* release_reservedstring1();
  inline void set_allocated_reservedstring1(::std::string* reservedstring1);

  // required string reservedstring2 = 20;
  inline bool has_reservedstring2() const;
  inline void clear_reservedstring2();
  static const int kReservedstring2FieldNumber = 20;
  inline const ::std::string& reservedstring2() const;
  inline void set_reservedstring2(const ::std::string& value);
  inline void set_reservedstring2(const char* value);
  inline void set_reservedstring2(const char* value, size_t size);
  inline ::std::string* mutable_reservedstring2();
  inline ::std::string* release_reservedstring2();
  inline void set_allocated_reservedstring2(::std::string* reservedstring2);

  // required string reservedstring3 = 21;
  inline bool has_reservedstring3() const;
  inline void clear_reservedstring3();
  static const int kReservedstring3FieldNumber = 21;
  inline const ::std::string& reservedstring3() const;
  inline void set_reservedstring3(const ::std::string& value);
  inline void set_reservedstring3(const char* value);
  inline void set_reservedstring3(const char* value, size_t size);
  inline ::std::string* mutable_reservedstring3();
  inline ::std::string* release_reservedstring3();
  inline void set_allocated_reservedstring3(::std::string* reservedstring3);

  // required string reservedstring4 = 22;
  inline bool has_reservedstring4() const;
  inline void clear_reservedstring4();
  static const int kReservedstring4FieldNumber = 22;
  inline const ::std::string& reservedstring4() const;
  inline void set_reservedstring4(const ::std::string& value);
  inline void set_reservedstring4(const char* value);
  inline void set_reservedstring4(const char* value, size_t size);
  inline ::std::string* mutable_reservedstring4();
  inline ::std::string* release_reservedstring4();
  inline void set_allocated_reservedstring4(::std::string* reservedstring4);

  // @@protoc_insertion_point(class_scope:CG_LOGIN)
 private:
  inline void set_has_vtype();
  inline void clear_has_vtype();
  inline void set_has_gameversion();
  inline void clear_has_gameversion();
  inline void set_has_programversion();
  inline void clear_has_programversion();
  inline void set_has_publicresourceversion();
  inline void clear_has_publicresourceversion();
  inline void set_has_maxpacketid();
  inline void clear_has_maxpacketid();
  inline void set_has_forceenter();
  inline void clear_has_forceenter();
  inline void set_has_deviceid();
  inline void clear_has_deviceid();
  inline void set_has_devicetype();
  inline void clear_has_devicetype();
  inline void set_has_deviceversion();
  inline void clear_has_deviceversion();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_validateinfo();
  inline void clear_has_validateinfo();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_mediachannel();
  inline void clear_has_mediachannel();
  inline void set_has_rapidvalidatecode();
  inline void clear_has_rapidvalidatecode();
  inline void set_has_reservedint1();
  inline void clear_has_reservedint1();
  inline void set_has_reservedint2();
  inline void clear_has_reservedint2();
  inline void set_has_reservedint3();
  inline void clear_has_reservedint3();
  inline void set_has_reservedint4();
  inline void clear_has_reservedint4();
  inline void set_has_reservedstring1();
  inline void clear_has_reservedstring1();
  inline void set_has_reservedstring2();
  inline void clear_has_reservedstring2();
  inline void set_has_reservedstring3();
  inline void clear_has_reservedstring3();
  inline void set_has_reservedstring4();
  inline void clear_has_reservedstring4();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 vtype_;
  ::google::protobuf::int32 gameversion_;
  ::google::protobuf::int32 programversion_;
  ::google::protobuf::int32 publicresourceversion_;
  ::google::protobuf::int32 maxpacketid_;
  ::google::protobuf::int32 forceenter_;
  ::std::string* deviceid_;
  ::std::string* devicetype_;
  ::std::string* deviceversion_;
  ::std::string* account_;
  ::std::string* validateinfo_;
  ::std::string* channelid_;
  ::std::string* mediachannel_;
  ::google::protobuf::int32 rapidvalidatecode_;
  ::google::protobuf::int32 reservedint1_;
  ::google::protobuf::int32 reservedint2_;
  ::google::protobuf::int32 reservedint3_;
  ::std::string* reservedstring1_;
  ::std::string* reservedstring2_;
  ::std::string* reservedstring3_;
  ::std::string* reservedstring4_;
  ::google::protobuf::int32 reservedint4_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(22 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_LOGIN* default_instance_;
};
// -------------------------------------------------------------------

class GC_LOGIN_RET : public ::google::protobuf::Message {
 public:
  GC_LOGIN_RET();
  virtual ~GC_LOGIN_RET();

  GC_LOGIN_RET(const GC_LOGIN_RET& from);

  inline GC_LOGIN_RET& operator=(const GC_LOGIN_RET& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_LOGIN_RET& default_instance();

  void Swap(GC_LOGIN_RET* other);

  // implements Message ----------------------------------------------

  GC_LOGIN_RET* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_LOGIN_RET& from);
  void MergeFrom(const GC_LOGIN_RET& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GC_LOGIN_RET_LOGINRESULT LOGINRESULT;
  static const LOGINRESULT SUCCESS = GC_LOGIN_RET_LOGINRESULT_SUCCESS;
  static const LOGINRESULT ACCOUNTVERIFYFAIL = GC_LOGIN_RET_LOGINRESULT_ACCOUNTVERIFYFAIL;
  static const LOGINRESULT READROLELISTFAIL = GC_LOGIN_RET_LOGINRESULT_READROLELISTFAIL;
  static const LOGINRESULT ALREADYLOGIN = GC_LOGIN_RET_LOGINRESULT_ALREADYLOGIN;
  static const LOGINRESULT QUEUEFULL = GC_LOGIN_RET_LOGINRESULT_QUEUEFULL;
  static const LOGINRESULT NEEDFORCEENTER = GC_LOGIN_RET_LOGINRESULT_NEEDFORCEENTER;
  static const LOGINRESULT PACKETNOTMATCH = GC_LOGIN_RET_LOGINRESULT_PACKETNOTMATCH;
  static const LOGINRESULT VERSIONNOTMATCH = GC_LOGIN_RET_LOGINRESULT_VERSIONNOTMATCH;
  static inline bool LOGINRESULT_IsValid(int value) {
    return GC_LOGIN_RET_LOGINRESULT_IsValid(value);
  }
  static const LOGINRESULT LOGINRESULT_MIN =
    GC_LOGIN_RET_LOGINRESULT_LOGINRESULT_MIN;
  static const LOGINRESULT LOGINRESULT_MAX =
    GC_LOGIN_RET_LOGINRESULT_LOGINRESULT_MAX;
  static const int LOGINRESULT_ARRAYSIZE =
    GC_LOGIN_RET_LOGINRESULT_LOGINRESULT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LOGINRESULT_descriptor() {
    return GC_LOGIN_RET_LOGINRESULT_descriptor();
  }
  static inline const ::std::string& LOGINRESULT_Name(LOGINRESULT value) {
    return GC_LOGIN_RET_LOGINRESULT_Name(value);
  }
  static inline bool LOGINRESULT_Parse(const ::std::string& name,
      LOGINRESULT* value) {
    return GC_LOGIN_RET_LOGINRESULT_Parse(name, value);
  }

  typedef GC_LOGIN_RET_VALIDATERESULT VALIDATERESULT;
  static const VALIDATERESULT OK = GC_LOGIN_RET_VALIDATERESULT_OK;
  static const VALIDATERESULT FAIL_VALIDATETYPEERROR = GC_LOGIN_RET_VALIDATERESULT_FAIL_VALIDATETYPEERROR;
  static const VALIDATERESULT FAIL_PERFORM = GC_LOGIN_RET_VALIDATERESULT_FAIL_PERFORM;
  static const VALIDATERESULT FAIL_OPCODE = GC_LOGIN_RET_VALIDATERESULT_FAIL_OPCODE;
  static const VALIDATERESULT FAIL_TAG = GC_LOGIN_RET_VALIDATERESULT_FAIL_TAG;
  static const VALIDATERESULT FAIL_STATE = GC_LOGIN_RET_VALIDATERESULT_FAIL_STATE;
  static const VALIDATERESULT FAIL_DATA_STATUS = GC_LOGIN_RET_VALIDATERESULT_FAIL_DATA_STATUS;
  static const VALIDATERESULT FAIL_CHANNELID = GC_LOGIN_RET_VALIDATERESULT_FAIL_CHANNELID;
  static const VALIDATERESULT FAIL_BLOCKED = GC_LOGIN_RET_VALIDATERESULT_FAIL_BLOCKED;
  static inline bool VALIDATERESULT_IsValid(int value) {
    return GC_LOGIN_RET_VALIDATERESULT_IsValid(value);
  }
  static const VALIDATERESULT VALIDATERESULT_MIN =
    GC_LOGIN_RET_VALIDATERESULT_VALIDATERESULT_MIN;
  static const VALIDATERESULT VALIDATERESULT_MAX =
    GC_LOGIN_RET_VALIDATERESULT_VALIDATERESULT_MAX;
  static const int VALIDATERESULT_ARRAYSIZE =
    GC_LOGIN_RET_VALIDATERESULT_VALIDATERESULT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VALIDATERESULT_descriptor() {
    return GC_LOGIN_RET_VALIDATERESULT_descriptor();
  }
  static inline const ::std::string& VALIDATERESULT_Name(VALIDATERESULT value) {
    return GC_LOGIN_RET_VALIDATERESULT_Name(value);
  }
  static inline bool VALIDATERESULT_Parse(const ::std::string& name,
      VALIDATERESULT* value) {
    return GC_LOGIN_RET_VALIDATERESULT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 validateresult = 2;
  inline bool has_validateresult() const;
  inline void clear_validateresult();
  static const int kValidateresultFieldNumber = 2;
  inline ::google::protobuf::int32 validateresult() const;
  inline void set_validateresult(::google::protobuf::int32 value);

  // required string userid = 3;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 3;
  inline const ::std::string& userid() const;
  inline void set_userid(const ::std::string& value);
  inline void set_userid(const char* value);
  inline void set_userid(const char* value, size_t size);
  inline ::std::string* mutable_userid();
  inline ::std::string* release_userid();
  inline void set_allocated_userid(::std::string* userid);

  // required string oid = 4;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 4;
  inline const ::std::string& oid() const;
  inline void set_oid(const ::std::string& value);
  inline void set_oid(const char* value);
  inline void set_oid(const char* value, size_t size);
  inline ::std::string* mutable_oid();
  inline ::std::string* release_oid();
  inline void set_allocated_oid(::std::string* oid);

  // required string accesstoken = 5;
  inline bool has_accesstoken() const;
  inline void clear_accesstoken();
  static const int kAccesstokenFieldNumber = 5;
  inline const ::std::string& accesstoken() const;
  inline void set_accesstoken(const ::std::string& value);
  inline void set_accesstoken(const char* value);
  inline void set_accesstoken(const char* value, size_t size);
  inline ::std::string* mutable_accesstoken();
  inline ::std::string* release_accesstoken();
  inline void set_allocated_accesstoken(::std::string* accesstoken);

  // required int32 rapidvalidatecode = 6;
  inline bool has_rapidvalidatecode() const;
  inline void clear_rapidvalidatecode();
  static const int kRapidvalidatecodeFieldNumber = 6;
  inline ::google::protobuf::int32 rapidvalidatecode() const;
  inline void set_rapidvalidatecode(::google::protobuf::int32 value);

  // repeated uint64 roleGUIDList = 7;
  inline int roleguidlist_size() const;
  inline void clear_roleguidlist();
  static const int kRoleGUIDListFieldNumber = 7;
  inline ::google::protobuf::uint64 roleguidlist(int index) const;
  inline void set_roleguidlist(int index, ::google::protobuf::uint64 value);
  inline void add_roleguidlist(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      roleguidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_roleguidlist();

  // repeated int32 roleTypeList = 8;
  inline int roletypelist_size() const;
  inline void clear_roletypelist();
  static const int kRoleTypeListFieldNumber = 8;
  inline ::google::protobuf::int32 roletypelist(int index) const;
  inline void set_roletypelist(int index, ::google::protobuf::int32 value);
  inline void add_roletypelist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roletypelist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roletypelist();

  // repeated string playerNameList = 9;
  inline int playernamelist_size() const;
  inline void clear_playernamelist();
  static const int kPlayerNameListFieldNumber = 9;
  inline const ::std::string& playernamelist(int index) const;
  inline ::std::string* mutable_playernamelist(int index);
  inline void set_playernamelist(int index, const ::std::string& value);
  inline void set_playernamelist(int index, const char* value);
  inline void set_playernamelist(int index, const char* value, size_t size);
  inline ::std::string* add_playernamelist();
  inline void add_playernamelist(const ::std::string& value);
  inline void add_playernamelist(const char* value);
  inline void add_playernamelist(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& playernamelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_playernamelist();

  // repeated int32 roleLevelList = 10;
  inline int rolelevellist_size() const;
  inline void clear_rolelevellist();
  static const int kRoleLevelListFieldNumber = 10;
  inline ::google::protobuf::int32 rolelevellist(int index) const;
  inline void set_rolelevellist(int index, ::google::protobuf::int32 value);
  inline void add_rolelevellist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rolelevellist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rolelevellist();

  // repeated int32 ModelVisualID = 11;
  inline int modelvisualid_size() const;
  inline void clear_modelvisualid();
  static const int kModelVisualIDFieldNumber = 11;
  inline ::google::protobuf::int32 modelvisualid(int index) const;
  inline void set_modelvisualid(int index, ::google::protobuf::int32 value);
  inline void add_modelvisualid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      modelvisualid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_modelvisualid();

  // repeated int32 WeaponID = 12;
  inline int weaponid_size() const;
  inline void clear_weaponid();
  static const int kWeaponIDFieldNumber = 12;
  inline ::google::protobuf::int32 weaponid(int index) const;
  inline void set_weaponid(int index, ::google::protobuf::int32 value);
  inline void add_weaponid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      weaponid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_weaponid();

  // repeated int32 WeaponEffectGem = 13;
  inline int weaponeffectgem_size() const;
  inline void clear_weaponeffectgem();
  static const int kWeaponEffectGemFieldNumber = 13;
  inline ::google::protobuf::int32 weaponeffectgem(int index) const;
  inline void set_weaponeffectgem(int index, ::google::protobuf::int32 value);
  inline void add_weaponeffectgem(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      weaponeffectgem() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_weaponeffectgem();

  // repeated int32 HuanHuaWeaponModel = 14;
  inline int huanhuaweaponmodel_size() const;
  inline void clear_huanhuaweaponmodel();
  static const int kHuanHuaWeaponModelFieldNumber = 14;
  inline ::google::protobuf::int32 huanhuaweaponmodel(int index) const;
  inline void set_huanhuaweaponmodel(int index, ::google::protobuf::int32 value);
  inline void add_huanhuaweaponmodel(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      huanhuaweaponmodel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_huanhuaweaponmodel();

  // @@protoc_insertion_point(class_scope:GC_LOGIN_RET)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_validateresult();
  inline void clear_has_validateresult();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_oid();
  inline void clear_has_oid();
  inline void set_has_accesstoken();
  inline void clear_has_accesstoken();
  inline void set_has_rapidvalidatecode();
  inline void clear_has_rapidvalidatecode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 validateresult_;
  ::std::string* userid_;
  ::std::string* oid_;
  ::std::string* accesstoken_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > roleguidlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roletypelist_;
  ::google::protobuf::RepeatedPtrField< ::std::string> playernamelist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rolelevellist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > modelvisualid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > weaponid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > weaponeffectgem_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > huanhuaweaponmodel_;
  ::google::protobuf::int32 rapidvalidatecode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_LOGIN_RET* default_instance_;
};
// -------------------------------------------------------------------

class CG_CONNECTED_HEARTBEAT : public ::google::protobuf::Message {
 public:
  CG_CONNECTED_HEARTBEAT();
  virtual ~CG_CONNECTED_HEARTBEAT();

  CG_CONNECTED_HEARTBEAT(const CG_CONNECTED_HEARTBEAT& from);

  inline CG_CONNECTED_HEARTBEAT& operator=(const CG_CONNECTED_HEARTBEAT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_CONNECTED_HEARTBEAT& default_instance();

  void Swap(CG_CONNECTED_HEARTBEAT* other);

  // implements Message ----------------------------------------------

  CG_CONNECTED_HEARTBEAT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_CONNECTED_HEARTBEAT& from);
  void MergeFrom(const CG_CONNECTED_HEARTBEAT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 isresponse = 1;
  inline bool has_isresponse() const;
  inline void clear_isresponse();
  static const int kIsresponseFieldNumber = 1;
  inline ::google::protobuf::int32 isresponse() const;
  inline void set_isresponse(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CG_CONNECTED_HEARTBEAT)
 private:
  inline void set_has_isresponse();
  inline void clear_has_isresponse();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isresponse_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_CONNECTED_HEARTBEAT* default_instance_;
};
// -------------------------------------------------------------------

class GC_CONNECTED_HEARTBEAT : public ::google::protobuf::Message {
 public:
  GC_CONNECTED_HEARTBEAT();
  virtual ~GC_CONNECTED_HEARTBEAT();

  GC_CONNECTED_HEARTBEAT(const GC_CONNECTED_HEARTBEAT& from);

  inline GC_CONNECTED_HEARTBEAT& operator=(const GC_CONNECTED_HEARTBEAT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_CONNECTED_HEARTBEAT& default_instance();

  void Swap(GC_CONNECTED_HEARTBEAT* other);

  // implements Message ----------------------------------------------

  GC_CONNECTED_HEARTBEAT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_CONNECTED_HEARTBEAT& from);
  void MergeFrom(const GC_CONNECTED_HEARTBEAT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 serveransitime = 1;
  inline bool has_serveransitime() const;
  inline void clear_serveransitime();
  static const int kServeransitimeFieldNumber = 1;
  inline ::google::protobuf::int32 serveransitime() const;
  inline void set_serveransitime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_CONNECTED_HEARTBEAT)
 private:
  inline void set_has_serveransitime();
  inline void clear_has_serveransitime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 serveransitime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_CONNECTED_HEARTBEAT* default_instance_;
};
// -------------------------------------------------------------------

class CG_REQ_NEAR_LIST : public ::google::protobuf::Message {
 public:
  CG_REQ_NEAR_LIST();
  virtual ~CG_REQ_NEAR_LIST();

  CG_REQ_NEAR_LIST(const CG_REQ_NEAR_LIST& from);

  inline CG_REQ_NEAR_LIST& operator=(const CG_REQ_NEAR_LIST& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_REQ_NEAR_LIST& default_instance();

  void Swap(CG_REQ_NEAR_LIST* other);

  // implements Message ----------------------------------------------

  CG_REQ_NEAR_LIST* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_REQ_NEAR_LIST& from);
  void MergeFrom(const CG_REQ_NEAR_LIST& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 marchId = 1;
  inline bool has_marchid() const;
  inline void clear_marchid();
  static const int kMarchIdFieldNumber = 1;
  inline ::google::protobuf::int64 marchid() const;
  inline void set_marchid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CG_REQ_NEAR_LIST)
 private:
  inline void set_has_marchid();
  inline void clear_has_marchid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 marchid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_REQ_NEAR_LIST* default_instance_;
};
// -------------------------------------------------------------------

class GC_NEAR_MARCHLIST : public ::google::protobuf::Message {
 public:
  GC_NEAR_MARCHLIST();
  virtual ~GC_NEAR_MARCHLIST();

  GC_NEAR_MARCHLIST(const GC_NEAR_MARCHLIST& from);

  inline GC_NEAR_MARCHLIST& operator=(const GC_NEAR_MARCHLIST& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_NEAR_MARCHLIST& default_instance();

  void Swap(GC_NEAR_MARCHLIST* other);

  // implements Message ----------------------------------------------

  GC_NEAR_MARCHLIST* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_NEAR_MARCHLIST& from);
  void MergeFrom(const GC_NEAR_MARCHLIST& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 Guid = 1;
  inline int guid_size() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid(int index) const;
  inline void set_guid(int index, ::google::protobuf::uint64 value);
  inline void add_guid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guid();

  // repeated string Name = 2;
  inline int name_size() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name(int index) const;
  inline ::std::string* mutable_name(int index);
  inline void set_name(int index, const ::std::string& value);
  inline void set_name(int index, const char* value);
  inline void set_name(int index, const char* value, size_t size);
  inline ::std::string* add_name();
  inline void add_name(const ::std::string& value);
  inline void add_name(const char* value);
  inline void add_name(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();

  // repeated int32 Level = 3;
  inline int level_size() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level(int index) const;
  inline void set_level(int index, ::google::protobuf::int32 value);
  inline void add_level(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      level() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_level();

  // repeated int32 CombatNum = 4;
  inline int combatnum_size() const;
  inline void clear_combatnum();
  static const int kCombatNumFieldNumber = 4;
  inline ::google::protobuf::int32 combatnum(int index) const;
  inline void set_combatnum(int index, ::google::protobuf::int32 value);
  inline void add_combatnum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      combatnum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_combatnum();

  // @@protoc_insertion_point(class_scope:GC_NEAR_MARCHLIST)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > combatnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_NEAR_MARCHLIST* default_instance_;
};
// -------------------------------------------------------------------

class CG_CHAT : public ::google::protobuf::Message {
 public:
  CG_CHAT();
  virtual ~CG_CHAT();

  CG_CHAT(const CG_CHAT& from);

  inline CG_CHAT& operator=(const CG_CHAT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_CHAT& default_instance();

  void Swap(CG_CHAT* other);

  // implements Message ----------------------------------------------

  CG_CHAT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_CHAT& from);
  void MergeFrom(const CG_CHAT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CG_CHAT_CHATTYPE CHATTYPE;
  static const CHATTYPE CHAT_TYPE_INVALID = CG_CHAT_CHATTYPE_CHAT_TYPE_INVALID;
  static const CHATTYPE CHAT_TYPE_NORMAL = CG_CHAT_CHATTYPE_CHAT_TYPE_NORMAL;
  static const CHATTYPE CHAT_TYPE_WORLD = CG_CHAT_CHATTYPE_CHAT_TYPE_WORLD;
  static const CHATTYPE CHAT_TYPE_SYSTEM = CG_CHAT_CHATTYPE_CHAT_TYPE_SYSTEM;
  static const CHATTYPE CHAT_TYPE_LOUDSPEAKER = CG_CHAT_CHATTYPE_CHAT_TYPE_LOUDSPEAKER;
  static const CHATTYPE CHAT_TYPE_FRIEND = CG_CHAT_CHATTYPE_CHAT_TYPE_FRIEND;
  static inline bool CHATTYPE_IsValid(int value) {
    return CG_CHAT_CHATTYPE_IsValid(value);
  }
  static const CHATTYPE CHATTYPE_MIN =
    CG_CHAT_CHATTYPE_CHATTYPE_MIN;
  static const CHATTYPE CHATTYPE_MAX =
    CG_CHAT_CHATTYPE_CHATTYPE_MAX;
  static const int CHATTYPE_ARRAYSIZE =
    CG_CHAT_CHATTYPE_CHATTYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CHATTYPE_descriptor() {
    return CG_CHAT_CHATTYPE_descriptor();
  }
  static inline const ::std::string& CHATTYPE_Name(CHATTYPE value) {
    return CG_CHAT_CHATTYPE_Name(value);
  }
  static inline bool CHATTYPE_Parse(const ::std::string& name,
      CHATTYPE* value) {
    return CG_CHAT_CHATTYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 chattype = 1;
  inline bool has_chattype() const;
  inline void clear_chattype();
  static const int kChattypeFieldNumber = 1;
  inline ::google::protobuf::int32 chattype() const;
  inline void set_chattype(::google::protobuf::int32 value);

  // required string chatinfo = 2;
  inline bool has_chatinfo() const;
  inline void clear_chatinfo();
  static const int kChatinfoFieldNumber = 2;
  inline const ::std::string& chatinfo() const;
  inline void set_chatinfo(const ::std::string& value);
  inline void set_chatinfo(const char* value);
  inline void set_chatinfo(const char* value, size_t size);
  inline ::std::string* mutable_chatinfo();
  inline ::std::string* release_chatinfo();
  inline void set_allocated_chatinfo(::std::string* chatinfo);

  // optional uint64 receiverguid = 3;
  inline bool has_receiverguid() const;
  inline void clear_receiverguid();
  static const int kReceiverguidFieldNumber = 3;
  inline ::google::protobuf::uint64 receiverguid() const;
  inline void set_receiverguid(::google::protobuf::uint64 value);

  // optional string receivername = 4;
  inline bool has_receivername() const;
  inline void clear_receivername();
  static const int kReceivernameFieldNumber = 4;
  inline const ::std::string& receivername() const;
  inline void set_receivername(const ::std::string& value);
  inline void set_receivername(const char* value);
  inline void set_receivername(const char* value, size_t size);
  inline ::std::string* mutable_receivername();
  inline ::std::string* release_receivername();
  inline void set_allocated_receivername(::std::string* receivername);

  // optional int32 receiverlevel = 5;
  inline bool has_receiverlevel() const;
  inline void clear_receiverlevel();
  static const int kReceiverlevelFieldNumber = 5;
  inline ::google::protobuf::int32 receiverlevel() const;
  inline void set_receiverlevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CG_CHAT)
 private:
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_chatinfo();
  inline void clear_has_chatinfo();
  inline void set_has_receiverguid();
  inline void clear_has_receiverguid();
  inline void set_has_receivername();
  inline void clear_has_receivername();
  inline void set_has_receiverlevel();
  inline void clear_has_receiverlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* chatinfo_;
  ::google::protobuf::uint64 receiverguid_;
  ::google::protobuf::int32 chattype_;
  ::google::protobuf::int32 receiverlevel_;
  ::std::string* receivername_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_CHAT* default_instance_;
};
// -------------------------------------------------------------------

class GC_CHAT : public ::google::protobuf::Message {
 public:
  GC_CHAT();
  virtual ~GC_CHAT();

  GC_CHAT(const GC_CHAT& from);

  inline GC_CHAT& operator=(const GC_CHAT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_CHAT& default_instance();

  void Swap(GC_CHAT* other);

  // implements Message ----------------------------------------------

  GC_CHAT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_CHAT& from);
  void MergeFrom(const GC_CHAT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GC_CHAT_CHATTYPE CHATTYPE;
  static const CHATTYPE CHAT_TYPE_INVALID = GC_CHAT_CHATTYPE_CHAT_TYPE_INVALID;
  static const CHATTYPE CHAT_TYPE_NORMAL = GC_CHAT_CHATTYPE_CHAT_TYPE_NORMAL;
  static const CHATTYPE CHAT_TYPE_WORLD = GC_CHAT_CHATTYPE_CHAT_TYPE_WORLD;
  static const CHATTYPE CHAT_TYPE_SYSTEM = GC_CHAT_CHATTYPE_CHAT_TYPE_SYSTEM;
  static const CHATTYPE CHAT_TYPE_LOUDSPEAKER = GC_CHAT_CHATTYPE_CHAT_TYPE_LOUDSPEAKER;
  static const CHATTYPE CHAT_TYPE_FRIEND = GC_CHAT_CHATTYPE_CHAT_TYPE_FRIEND;
  static inline bool CHATTYPE_IsValid(int value) {
    return GC_CHAT_CHATTYPE_IsValid(value);
  }
  static const CHATTYPE CHATTYPE_MIN =
    GC_CHAT_CHATTYPE_CHATTYPE_MIN;
  static const CHATTYPE CHATTYPE_MAX =
    GC_CHAT_CHATTYPE_CHATTYPE_MAX;
  static const int CHATTYPE_ARRAYSIZE =
    GC_CHAT_CHATTYPE_CHATTYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CHATTYPE_descriptor() {
    return GC_CHAT_CHATTYPE_descriptor();
  }
  static inline const ::std::string& CHATTYPE_Name(CHATTYPE value) {
    return GC_CHAT_CHATTYPE_Name(value);
  }
  static inline bool CHATTYPE_Parse(const ::std::string& name,
      CHATTYPE* value) {
    return GC_CHAT_CHATTYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 chattype = 1;
  inline bool has_chattype() const;
  inline void clear_chattype();
  static const int kChattypeFieldNumber = 1;
  inline ::google::protobuf::int32 chattype() const;
  inline void set_chattype(::google::protobuf::int32 value);

  // required string chatinfo = 2;
  inline bool has_chatinfo() const;
  inline void clear_chatinfo();
  static const int kChatinfoFieldNumber = 2;
  inline const ::std::string& chatinfo() const;
  inline void set_chatinfo(const ::std::string& value);
  inline void set_chatinfo(const char* value);
  inline void set_chatinfo(const char* value, size_t size);
  inline ::std::string* mutable_chatinfo();
  inline ::std::string* release_chatinfo();
  inline void set_allocated_chatinfo(::std::string* chatinfo);

  // optional uint64 senderguid = 3;
  inline bool has_senderguid() const;
  inline void clear_senderguid();
  static const int kSenderguidFieldNumber = 3;
  inline ::google::protobuf::uint64 senderguid() const;
  inline void set_senderguid(::google::protobuf::uint64 value);

  // optional string sendername = 4;
  inline bool has_sendername() const;
  inline void clear_sendername();
  static const int kSendernameFieldNumber = 4;
  inline const ::std::string& sendername() const;
  inline void set_sendername(const ::std::string& value);
  inline void set_sendername(const char* value);
  inline void set_sendername(const char* value, size_t size);
  inline ::std::string* mutable_sendername();
  inline ::std::string* release_sendername();
  inline void set_allocated_sendername(::std::string* sendername);

  // optional int32 senderlevel = 5;
  inline bool has_senderlevel() const;
  inline void clear_senderlevel();
  static const int kSenderlevelFieldNumber = 5;
  inline ::google::protobuf::int32 senderlevel() const;
  inline void set_senderlevel(::google::protobuf::int32 value);

  // optional uint64 receiverguid = 6;
  inline bool has_receiverguid() const;
  inline void clear_receiverguid();
  static const int kReceiverguidFieldNumber = 6;
  inline ::google::protobuf::uint64 receiverguid() const;
  inline void set_receiverguid(::google::protobuf::uint64 value);

  // optional string receivername = 7;
  inline bool has_receivername() const;
  inline void clear_receivername();
  static const int kReceivernameFieldNumber = 7;
  inline const ::std::string& receivername() const;
  inline void set_receivername(const ::std::string& value);
  inline void set_receivername(const char* value);
  inline void set_receivername(const char* value, size_t size);
  inline ::std::string* mutable_receivername();
  inline ::std::string* release_receivername();
  inline void set_allocated_receivername(::std::string* receivername);

  // @@protoc_insertion_point(class_scope:GC_CHAT)
 private:
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_chatinfo();
  inline void clear_has_chatinfo();
  inline void set_has_senderguid();
  inline void clear_has_senderguid();
  inline void set_has_sendername();
  inline void clear_has_sendername();
  inline void set_has_senderlevel();
  inline void clear_has_senderlevel();
  inline void set_has_receiverguid();
  inline void clear_has_receiverguid();
  inline void set_has_receivername();
  inline void clear_has_receivername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* chatinfo_;
  ::google::protobuf::uint64 senderguid_;
  ::google::protobuf::int32 chattype_;
  ::google::protobuf::int32 senderlevel_;
  ::std::string* sendername_;
  ::google::protobuf::uint64 receiverguid_;
  ::std::string* receivername_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_CHAT* default_instance_;
};
// -------------------------------------------------------------------

class GC_NOTICE : public ::google::protobuf::Message {
 public:
  GC_NOTICE();
  virtual ~GC_NOTICE();

  GC_NOTICE(const GC_NOTICE& from);

  inline GC_NOTICE& operator=(const GC_NOTICE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_NOTICE& default_instance();

  void Swap(GC_NOTICE* other);

  // implements Message ----------------------------------------------

  GC_NOTICE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_NOTICE& from);
  void MergeFrom(const GC_NOTICE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string notice = 1;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 1;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  inline void set_allocated_notice(::std::string* notice);

  // optional int32 filterRepeat = 2;
  inline bool has_filterrepeat() const;
  inline void clear_filterrepeat();
  static const int kFilterRepeatFieldNumber = 2;
  inline ::google::protobuf::int32 filterrepeat() const;
  inline void set_filterrepeat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_NOTICE)
 private:
  inline void set_has_notice();
  inline void clear_has_notice();
  inline void set_has_filterrepeat();
  inline void clear_has_filterrepeat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* notice_;
  ::google::protobuf::int32 filterrepeat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_NOTICE* default_instance_;
};
// -------------------------------------------------------------------

class GC_UPDATE_SCENE_INSTACTIVATION : public ::google::protobuf::Message {
 public:
  GC_UPDATE_SCENE_INSTACTIVATION();
  virtual ~GC_UPDATE_SCENE_INSTACTIVATION();

  GC_UPDATE_SCENE_INSTACTIVATION(const GC_UPDATE_SCENE_INSTACTIVATION& from);

  inline GC_UPDATE_SCENE_INSTACTIVATION& operator=(const GC_UPDATE_SCENE_INSTACTIVATION& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_UPDATE_SCENE_INSTACTIVATION& default_instance();

  void Swap(GC_UPDATE_SCENE_INSTACTIVATION* other);

  // implements Message ----------------------------------------------

  GC_UPDATE_SCENE_INSTACTIVATION* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_UPDATE_SCENE_INSTACTIVATION& from);
  void MergeFrom(const GC_UPDATE_SCENE_INSTACTIVATION& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sceneclassid = 1;
  inline bool has_sceneclassid() const;
  inline void clear_sceneclassid();
  static const int kSceneclassidFieldNumber = 1;
  inline ::google::protobuf::int32 sceneclassid() const;
  inline void set_sceneclassid(::google::protobuf::int32 value);

  // required int32 sceneinstcount = 2;
  inline bool has_sceneinstcount() const;
  inline void clear_sceneinstcount();
  static const int kSceneinstcountFieldNumber = 2;
  inline ::google::protobuf::int32 sceneinstcount() const;
  inline void set_sceneinstcount(::google::protobuf::int32 value);

  // repeated int32 sceneactivation = 3;
  inline int sceneactivation_size() const;
  inline void clear_sceneactivation();
  static const int kSceneactivationFieldNumber = 3;
  inline ::google::protobuf::int32 sceneactivation(int index) const;
  inline void set_sceneactivation(int index, ::google::protobuf::int32 value);
  inline void add_sceneactivation(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      sceneactivation() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_sceneactivation();

  // @@protoc_insertion_point(class_scope:GC_UPDATE_SCENE_INSTACTIVATION)
 private:
  inline void set_has_sceneclassid();
  inline void clear_has_sceneclassid();
  inline void set_has_sceneinstcount();
  inline void clear_has_sceneinstcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 sceneclassid_;
  ::google::protobuf::int32 sceneinstcount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > sceneactivation_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_UPDATE_SCENE_INSTACTIVATION* default_instance_;
};
// -------------------------------------------------------------------

class GS_CONNECTED_HEARTBEAT : public ::google::protobuf::Message {
 public:
  GS_CONNECTED_HEARTBEAT();
  virtual ~GS_CONNECTED_HEARTBEAT();

  GS_CONNECTED_HEARTBEAT(const GS_CONNECTED_HEARTBEAT& from);

  inline GS_CONNECTED_HEARTBEAT& operator=(const GS_CONNECTED_HEARTBEAT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GS_CONNECTED_HEARTBEAT& default_instance();

  void Swap(GS_CONNECTED_HEARTBEAT* other);

  // implements Message ----------------------------------------------

  GS_CONNECTED_HEARTBEAT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GS_CONNECTED_HEARTBEAT& from);
  void MergeFrom(const GS_CONNECTED_HEARTBEAT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 senderworldid = 1;
  inline bool has_senderworldid() const;
  inline void clear_senderworldid();
  static const int kSenderworldidFieldNumber = 1;
  inline ::google::protobuf::int32 senderworldid() const;
  inline void set_senderworldid(::google::protobuf::int32 value);

  // required int32 receiverworldid = 2;
  inline bool has_receiverworldid() const;
  inline void clear_receiverworldid();
  static const int kReceiverworldidFieldNumber = 2;
  inline ::google::protobuf::int32 receiverworldid() const;
  inline void set_receiverworldid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GS_CONNECTED_HEARTBEAT)
 private:
  inline void set_has_senderworldid();
  inline void clear_has_senderworldid();
  inline void set_has_receiverworldid();
  inline void clear_has_receiverworldid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 senderworldid_;
  ::google::protobuf::int32 receiverworldid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GS_CONNECTED_HEARTBEAT* default_instance_;
};
// -------------------------------------------------------------------

class SG_CONNECTED_HEARTBEAT : public ::google::protobuf::Message {
 public:
  SG_CONNECTED_HEARTBEAT();
  virtual ~SG_CONNECTED_HEARTBEAT();

  SG_CONNECTED_HEARTBEAT(const SG_CONNECTED_HEARTBEAT& from);

  inline SG_CONNECTED_HEARTBEAT& operator=(const SG_CONNECTED_HEARTBEAT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SG_CONNECTED_HEARTBEAT& default_instance();

  void Swap(SG_CONNECTED_HEARTBEAT* other);

  // implements Message ----------------------------------------------

  SG_CONNECTED_HEARTBEAT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SG_CONNECTED_HEARTBEAT& from);
  void MergeFrom(const SG_CONNECTED_HEARTBEAT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 senderworldid = 1;
  inline bool has_senderworldid() const;
  inline void clear_senderworldid();
  static const int kSenderworldidFieldNumber = 1;
  inline ::google::protobuf::int32 senderworldid() const;
  inline void set_senderworldid(::google::protobuf::int32 value);

  // required int32 receiverworldid = 2;
  inline bool has_receiverworldid() const;
  inline void clear_receiverworldid();
  static const int kReceiverworldidFieldNumber = 2;
  inline ::google::protobuf::int32 receiverworldid() const;
  inline void set_receiverworldid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SG_CONNECTED_HEARTBEAT)
 private:
  inline void set_has_senderworldid();
  inline void clear_has_senderworldid();
  inline void set_has_receiverworldid();
  inline void clear_has_receiverworldid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 senderworldid_;
  ::google::protobuf::int32 receiverworldid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static SG_CONNECTED_HEARTBEAT* default_instance_;
};
// -------------------------------------------------------------------

class CG_MOVE : public ::google::protobuf::Message {
 public:
  CG_MOVE();
  virtual ~CG_MOVE();

  CG_MOVE(const CG_MOVE& from);

  inline CG_MOVE& operator=(const CG_MOVE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_MOVE& default_instance();

  void Swap(CG_MOVE* other);

  // implements Message ----------------------------------------------

  CG_MOVE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_MOVE& from);
  void MergeFrom(const CG_MOVE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 poscount = 1;
  inline bool has_poscount() const;
  inline void clear_poscount();
  static const int kPoscountFieldNumber = 1;
  inline ::google::protobuf::int32 poscount() const;
  inline void set_poscount(::google::protobuf::int32 value);

  // repeated int32 posx = 2;
  inline int posx_size() const;
  inline void clear_posx();
  static const int kPosxFieldNumber = 2;
  inline ::google::protobuf::int32 posx(int index) const;
  inline void set_posx(int index, ::google::protobuf::int32 value);
  inline void add_posx(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      posx() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_posx();

  // repeated int32 posz = 3;
  inline int posz_size() const;
  inline void clear_posz();
  static const int kPoszFieldNumber = 3;
  inline ::google::protobuf::int32 posz(int index) const;
  inline void set_posz(int index, ::google::protobuf::int32 value);
  inline void add_posz(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      posz() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_posz();

  // required int32 ismoving = 4;
  inline bool has_ismoving() const;
  inline void clear_ismoving();
  static const int kIsmovingFieldNumber = 4;
  inline ::google::protobuf::int32 ismoving() const;
  inline void set_ismoving(::google::protobuf::int32 value);

  // required int64 marchid = 5;
  inline bool has_marchid() const;
  inline void clear_marchid();
  static const int kMarchidFieldNumber = 5;
  inline ::google::protobuf::int64 marchid() const;
  inline void set_marchid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CG_MOVE)
 private:
  inline void set_has_poscount();
  inline void clear_has_poscount();
  inline void set_has_ismoving();
  inline void clear_has_ismoving();
  inline void set_has_marchid();
  inline void clear_has_marchid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > posx_;
  ::google::protobuf::int32 poscount_;
  ::google::protobuf::int32 ismoving_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > posz_;
  ::google::protobuf::int64 marchid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_MOVE* default_instance_;
};
// -------------------------------------------------------------------

class GC_MOVE : public ::google::protobuf::Message {
 public:
  GC_MOVE();
  virtual ~GC_MOVE();

  GC_MOVE(const GC_MOVE& from);

  inline GC_MOVE& operator=(const GC_MOVE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_MOVE& default_instance();

  void Swap(GC_MOVE* other);

  // implements Message ----------------------------------------------

  GC_MOVE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_MOVE& from);
  void MergeFrom(const GC_MOVE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 serverid = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 1;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);

  // required int32 poscount = 2;
  inline bool has_poscount() const;
  inline void clear_poscount();
  static const int kPoscountFieldNumber = 2;
  inline ::google::protobuf::int32 poscount() const;
  inline void set_poscount(::google::protobuf::int32 value);

  // repeated int32 posserial = 3;
  inline int posserial_size() const;
  inline void clear_posserial();
  static const int kPosserialFieldNumber = 3;
  inline ::google::protobuf::int32 posserial(int index) const;
  inline void set_posserial(int index, ::google::protobuf::int32 value);
  inline void add_posserial(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      posserial() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_posserial();

  // repeated int32 posx = 4;
  inline int posx_size() const;
  inline void clear_posx();
  static const int kPosxFieldNumber = 4;
  inline ::google::protobuf::int32 posx(int index) const;
  inline void set_posx(int index, ::google::protobuf::int32 value);
  inline void add_posx(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      posx() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_posx();

  // repeated int32 posz = 5;
  inline int posz_size() const;
  inline void clear_posz();
  static const int kPoszFieldNumber = 5;
  inline ::google::protobuf::int32 posz(int index) const;
  inline void set_posz(int index, ::google::protobuf::int32 value);
  inline void add_posz(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      posz() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_posz();

  // @@protoc_insertion_point(class_scope:GC_MOVE)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_poscount();
  inline void clear_has_poscount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 serverid_;
  ::google::protobuf::int32 poscount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > posserial_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > posx_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > posz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_MOVE* default_instance_;
};
// -------------------------------------------------------------------

class GC_STOP : public ::google::protobuf::Message {
 public:
  GC_STOP();
  virtual ~GC_STOP();

  GC_STOP(const GC_STOP& from);

  inline GC_STOP& operator=(const GC_STOP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_STOP& default_instance();

  void Swap(GC_STOP* other);

  // implements Message ----------------------------------------------

  GC_STOP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_STOP& from);
  void MergeFrom(const GC_STOP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 serverid = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 1;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);

  // required int32 posserial = 2;
  inline bool has_posserial() const;
  inline void clear_posserial();
  static const int kPosserialFieldNumber = 2;
  inline ::google::protobuf::int32 posserial() const;
  inline void set_posserial(::google::protobuf::int32 value);

  // required int32 posx = 3;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosxFieldNumber = 3;
  inline ::google::protobuf::int32 posx() const;
  inline void set_posx(::google::protobuf::int32 value);

  // required int32 posz = 4;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPoszFieldNumber = 4;
  inline ::google::protobuf::int32 posz() const;
  inline void set_posz(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_STOP)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_posserial();
  inline void clear_has_posserial();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posz();
  inline void clear_has_posz();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 serverid_;
  ::google::protobuf::int32 posserial_;
  ::google::protobuf::int32 posx_;
  ::google::protobuf::int32 posz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_STOP* default_instance_;
};
// -------------------------------------------------------------------

class GC_TELEMOVE : public ::google::protobuf::Message {
 public:
  GC_TELEMOVE();
  virtual ~GC_TELEMOVE();

  GC_TELEMOVE(const GC_TELEMOVE& from);

  inline GC_TELEMOVE& operator=(const GC_TELEMOVE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_TELEMOVE& default_instance();

  void Swap(GC_TELEMOVE* other);

  // implements Message ----------------------------------------------

  GC_TELEMOVE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_TELEMOVE& from);
  void MergeFrom(const GC_TELEMOVE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // required int32 targetPosX = 2;
  inline bool has_targetposx() const;
  inline void clear_targetposx();
  static const int kTargetPosXFieldNumber = 2;
  inline ::google::protobuf::int32 targetposx() const;
  inline void set_targetposx(::google::protobuf::int32 value);

  // required int32 targetPosZ = 3;
  inline bool has_targetposz() const;
  inline void clear_targetposz();
  static const int kTargetPosZFieldNumber = 3;
  inline ::google::protobuf::int32 targetposz() const;
  inline void set_targetposz(::google::protobuf::int32 value);

  // required int32 needChangeFaceto = 4;
  inline bool has_needchangefaceto() const;
  inline void clear_needchangefaceto();
  static const int kNeedChangeFacetoFieldNumber = 4;
  inline ::google::protobuf::int32 needchangefaceto() const;
  inline void set_needchangefaceto(::google::protobuf::int32 value);

  // optional int32 animaId = 5;
  inline bool has_animaid() const;
  inline void clear_animaid();
  static const int kAnimaIdFieldNumber = 5;
  inline ::google::protobuf::int32 animaid() const;
  inline void set_animaid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_TELEMOVE)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_targetposx();
  inline void clear_has_targetposx();
  inline void set_has_targetposz();
  inline void clear_has_targetposz();
  inline void set_has_needchangefaceto();
  inline void clear_has_needchangefaceto();
  inline void set_has_animaid();
  inline void clear_has_animaid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objid_;
  ::google::protobuf::int32 targetposx_;
  ::google::protobuf::int32 targetposz_;
  ::google::protobuf::int32 needchangefaceto_;
  ::google::protobuf::int32 animaid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_TELEMOVE* default_instance_;
};
// -------------------------------------------------------------------

class GC_RET_USE_SKILL : public ::google::protobuf::Message {
 public:
  GC_RET_USE_SKILL();
  virtual ~GC_RET_USE_SKILL();

  GC_RET_USE_SKILL(const GC_RET_USE_SKILL& from);

  inline GC_RET_USE_SKILL& operator=(const GC_RET_USE_SKILL& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_RET_USE_SKILL& default_instance();

  void Swap(GC_RET_USE_SKILL* other);

  // implements Message ----------------------------------------------

  GC_RET_USE_SKILL* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_RET_USE_SKILL& from);
  void MergeFrom(const GC_RET_USE_SKILL& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // required int32 senderId = 2;
  inline bool has_senderid() const;
  inline void clear_senderid();
  static const int kSenderIdFieldNumber = 2;
  inline ::google::protobuf::int32 senderid() const;
  inline void set_senderid(::google::protobuf::int32 value);

  // required int32 TargetId = 3;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetIdFieldNumber = 3;
  inline ::google::protobuf::int32 targetid() const;
  inline void set_targetid(::google::protobuf::int32 value);

  // optional int32 skillfailType = 4;
  inline bool has_skillfailtype() const;
  inline void clear_skillfailtype();
  static const int kSkillfailTypeFieldNumber = 4;
  inline ::google::protobuf::int32 skillfailtype() const;
  inline void set_skillfailtype(::google::protobuf::int32 value);

  // optional string skillname = 5;
  inline bool has_skillname() const;
  inline void clear_skillname();
  static const int kSkillnameFieldNumber = 5;
  inline const ::std::string& skillname() const;
  inline void set_skillname(const ::std::string& value);
  inline void set_skillname(const char* value);
  inline void set_skillname(const char* value, size_t size);
  inline ::std::string* mutable_skillname();
  inline ::std::string* release_skillname();
  inline void set_allocated_skillname(::std::string* skillname);

  // @@protoc_insertion_point(class_scope:GC_RET_USE_SKILL)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_senderid();
  inline void clear_has_senderid();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_skillfailtype();
  inline void clear_has_skillfailtype();
  inline void set_has_skillname();
  inline void clear_has_skillname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 senderid_;
  ::google::protobuf::int32 targetid_;
  ::google::protobuf::int32 skillfailtype_;
  ::std::string* skillname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_RET_USE_SKILL* default_instance_;
};
// -------------------------------------------------------------------

class GC_UPDATE_ANIMATION_STATE : public ::google::protobuf::Message {
 public:
  GC_UPDATE_ANIMATION_STATE();
  virtual ~GC_UPDATE_ANIMATION_STATE();

  GC_UPDATE_ANIMATION_STATE(const GC_UPDATE_ANIMATION_STATE& from);

  inline GC_UPDATE_ANIMATION_STATE& operator=(const GC_UPDATE_ANIMATION_STATE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_UPDATE_ANIMATION_STATE& default_instance();

  void Swap(GC_UPDATE_ANIMATION_STATE* other);

  // implements Message ----------------------------------------------

  GC_UPDATE_ANIMATION_STATE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_UPDATE_ANIMATION_STATE& from);
  void MergeFrom(const GC_UPDATE_ANIMATION_STATE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // required int32 AnimationState = 2;
  inline bool has_animationstate() const;
  inline void clear_animationstate();
  static const int kAnimationStateFieldNumber = 2;
  inline ::google::protobuf::int32 animationstate() const;
  inline void set_animationstate(::google::protobuf::int32 value);

  // optional int32 verticalOffDis = 3;
  inline bool has_verticaloffdis() const;
  inline void clear_verticaloffdis();
  static const int kVerticalOffDisFieldNumber = 3;
  inline ::google::protobuf::int32 verticaloffdis() const;
  inline void set_verticaloffdis(::google::protobuf::int32 value);

  // optional int32 horizontalOffDis = 4;
  inline bool has_horizontaloffdis() const;
  inline void clear_horizontaloffdis();
  static const int kHorizontalOffDisFieldNumber = 4;
  inline ::google::protobuf::int32 horizontaloffdis() const;
  inline void set_horizontaloffdis(::google::protobuf::int32 value);

  // optional int32 stateLastTime = 5;
  inline bool has_statelasttime() const;
  inline void clear_statelasttime();
  static const int kStateLastTimeFieldNumber = 5;
  inline ::google::protobuf::int32 statelasttime() const;
  inline void set_statelasttime(::google::protobuf::int32 value);

  // optional int32 stateResortTime = 6;
  inline bool has_stateresorttime() const;
  inline void clear_stateresorttime();
  static const int kStateResortTimeFieldNumber = 6;
  inline ::google::protobuf::int32 stateresorttime() const;
  inline void set_stateresorttime(::google::protobuf::int32 value);

  // optional int32 hitTimes = 7;
  inline bool has_hittimes() const;
  inline void clear_hittimes();
  static const int kHitTimesFieldNumber = 7;
  inline ::google::protobuf::int32 hittimes() const;
  inline void set_hittimes(::google::protobuf::int32 value);

  // optional int32 hitInterval = 8;
  inline bool has_hitinterval() const;
  inline void clear_hitinterval();
  static const int kHitIntervalFieldNumber = 8;
  inline ::google::protobuf::int32 hitinterval() const;
  inline void set_hitinterval(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_UPDATE_ANIMATION_STATE)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_animationstate();
  inline void clear_has_animationstate();
  inline void set_has_verticaloffdis();
  inline void clear_has_verticaloffdis();
  inline void set_has_horizontaloffdis();
  inline void clear_has_horizontaloffdis();
  inline void set_has_statelasttime();
  inline void clear_has_statelasttime();
  inline void set_has_stateresorttime();
  inline void clear_has_stateresorttime();
  inline void set_has_hittimes();
  inline void clear_has_hittimes();
  inline void set_has_hitinterval();
  inline void clear_has_hitinterval();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objid_;
  ::google::protobuf::int32 animationstate_;
  ::google::protobuf::int32 verticaloffdis_;
  ::google::protobuf::int32 horizontaloffdis_;
  ::google::protobuf::int32 statelasttime_;
  ::google::protobuf::int32 stateresorttime_;
  ::google::protobuf::int32 hittimes_;
  ::google::protobuf::int32 hitinterval_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_UPDATE_ANIMATION_STATE* default_instance_;
};
// -------------------------------------------------------------------

class GC_DELETE_OBJ : public ::google::protobuf::Message {
 public:
  GC_DELETE_OBJ();
  virtual ~GC_DELETE_OBJ();

  GC_DELETE_OBJ(const GC_DELETE_OBJ& from);

  inline GC_DELETE_OBJ& operator=(const GC_DELETE_OBJ& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_DELETE_OBJ& default_instance();

  void Swap(GC_DELETE_OBJ* other);

  // implements Message ----------------------------------------------

  GC_DELETE_OBJ* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_DELETE_OBJ& from);
  void MergeFrom(const GC_DELETE_OBJ& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 serverId = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 1;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_DELETE_OBJ)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 serverid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_DELETE_OBJ* default_instance_;
};
// -------------------------------------------------------------------

class GC_ATTACKFLY : public ::google::protobuf::Message {
 public:
  GC_ATTACKFLY();
  virtual ~GC_ATTACKFLY();

  GC_ATTACKFLY(const GC_ATTACKFLY& from);

  inline GC_ATTACKFLY& operator=(const GC_ATTACKFLY& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_ATTACKFLY& default_instance();

  void Swap(GC_ATTACKFLY* other);

  // implements Message ----------------------------------------------

  GC_ATTACKFLY* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_ATTACKFLY& from);
  void MergeFrom(const GC_ATTACKFLY& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // required int32 Dis = 2;
  inline bool has_dis() const;
  inline void clear_dis();
  static const int kDisFieldNumber = 2;
  inline ::google::protobuf::int32 dis() const;
  inline void set_dis(::google::protobuf::int32 value);

  // required int32 Hight = 3;
  inline bool has_hight() const;
  inline void clear_hight();
  static const int kHightFieldNumber = 3;
  inline ::google::protobuf::int32 hight() const;
  inline void set_hight(::google::protobuf::int32 value);

  // required int32 FlyTime = 4;
  inline bool has_flytime() const;
  inline void clear_flytime();
  static const int kFlyTimeFieldNumber = 4;
  inline ::google::protobuf::int32 flytime() const;
  inline void set_flytime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_ATTACKFLY)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_dis();
  inline void clear_has_dis();
  inline void set_has_hight();
  inline void clear_has_hight();
  inline void set_has_flytime();
  inline void clear_has_flytime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objid_;
  ::google::protobuf::int32 dis_;
  ::google::protobuf::int32 hight_;
  ::google::protobuf::int32 flytime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_ATTACKFLY* default_instance_;
};
// -------------------------------------------------------------------

class GC_FORCE_SETPOS : public ::google::protobuf::Message {
 public:
  GC_FORCE_SETPOS();
  virtual ~GC_FORCE_SETPOS();

  GC_FORCE_SETPOS(const GC_FORCE_SETPOS& from);

  inline GC_FORCE_SETPOS& operator=(const GC_FORCE_SETPOS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_FORCE_SETPOS& default_instance();

  void Swap(GC_FORCE_SETPOS* other);

  // implements Message ----------------------------------------------

  GC_FORCE_SETPOS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_FORCE_SETPOS& from);
  void MergeFrom(const GC_FORCE_SETPOS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ServerID = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIDFieldNumber = 1;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);

  // required int32 PosX = 2;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 2;
  inline ::google::protobuf::int32 posx() const;
  inline void set_posx(::google::protobuf::int32 value);

  // required int32 PosZ = 3;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 3;
  inline ::google::protobuf::int32 posz() const;
  inline void set_posz(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_FORCE_SETPOS)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posz();
  inline void clear_has_posz();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 serverid_;
  ::google::protobuf::int32 posx_;
  ::google::protobuf::int32 posz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_FORCE_SETPOS* default_instance_;
};
// -------------------------------------------------------------------

class GC_UPDATE_NEEDIMPACTINFO : public ::google::protobuf::Message {
 public:
  GC_UPDATE_NEEDIMPACTINFO();
  virtual ~GC_UPDATE_NEEDIMPACTINFO();

  GC_UPDATE_NEEDIMPACTINFO(const GC_UPDATE_NEEDIMPACTINFO& from);

  inline GC_UPDATE_NEEDIMPACTINFO& operator=(const GC_UPDATE_NEEDIMPACTINFO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_UPDATE_NEEDIMPACTINFO& default_instance();

  void Swap(GC_UPDATE_NEEDIMPACTINFO* other);

  // implements Message ----------------------------------------------

  GC_UPDATE_NEEDIMPACTINFO* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_UPDATE_NEEDIMPACTINFO& from);
  void MergeFrom(const GC_UPDATE_NEEDIMPACTINFO& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // repeated int32 impactId = 2;
  inline int impactid_size() const;
  inline void clear_impactid();
  static const int kImpactIdFieldNumber = 2;
  inline ::google::protobuf::int32 impactid(int index) const;
  inline void set_impactid(int index, ::google::protobuf::int32 value);
  inline void add_impactid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      impactid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_impactid();

  // repeated int32 impactLogicId = 3;
  inline int impactlogicid_size() const;
  inline void clear_impactlogicid();
  static const int kImpactLogicIdFieldNumber = 3;
  inline ::google::protobuf::int32 impactlogicid(int index) const;
  inline void set_impactlogicid(int index, ::google::protobuf::int32 value);
  inline void add_impactlogicid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      impactlogicid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_impactlogicid();

  // repeated int32 isForever = 4;
  inline int isforever_size() const;
  inline void clear_isforever();
  static const int kIsForeverFieldNumber = 4;
  inline ::google::protobuf::int32 isforever(int index) const;
  inline void set_isforever(int index, ::google::protobuf::int32 value);
  inline void add_isforever(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      isforever() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_isforever();

  // repeated int32 remainTime = 5;
  inline int remaintime_size() const;
  inline void clear_remaintime();
  static const int kRemainTimeFieldNumber = 5;
  inline ::google::protobuf::int32 remaintime(int index) const;
  inline void set_remaintime(int index, ::google::protobuf::int32 value);
  inline void add_remaintime(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      remaintime() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_remaintime();

  // repeated int32 isAdd = 6;
  inline int isadd_size() const;
  inline void clear_isadd();
  static const int kIsAddFieldNumber = 6;
  inline ::google::protobuf::int32 isadd(int index) const;
  inline void set_isadd(int index, ::google::protobuf::int32 value);
  inline void add_isadd(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      isadd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_isadd();

  // @@protoc_insertion_point(class_scope:GC_UPDATE_NEEDIMPACTINFO)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > impactid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > impactlogicid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > isforever_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > remaintime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > isadd_;
  ::google::protobuf::int32 objid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_UPDATE_NEEDIMPACTINFO* default_instance_;
};
// -------------------------------------------------------------------

class GC_PLAY_EFFECT : public ::google::protobuf::Message {
 public:
  GC_PLAY_EFFECT();
  virtual ~GC_PLAY_EFFECT();

  GC_PLAY_EFFECT(const GC_PLAY_EFFECT& from);

  inline GC_PLAY_EFFECT& operator=(const GC_PLAY_EFFECT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_PLAY_EFFECT& default_instance();

  void Swap(GC_PLAY_EFFECT* other);

  // implements Message ----------------------------------------------

  GC_PLAY_EFFECT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_PLAY_EFFECT& from);
  void MergeFrom(const GC_PLAY_EFFECT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ObjID = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIDFieldNumber = 1;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // required int32 EffectID = 2;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectIDFieldNumber = 2;
  inline ::google::protobuf::int32 effectid() const;
  inline void set_effectid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_PLAY_EFFECT)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_effectid();
  inline void clear_has_effectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objid_;
  ::google::protobuf::int32 effectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_PLAY_EFFECT* default_instance_;
};
// -------------------------------------------------------------------

class GC_REMOVEEFFECT : public ::google::protobuf::Message {
 public:
  GC_REMOVEEFFECT();
  virtual ~GC_REMOVEEFFECT();

  GC_REMOVEEFFECT(const GC_REMOVEEFFECT& from);

  inline GC_REMOVEEFFECT& operator=(const GC_REMOVEEFFECT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_REMOVEEFFECT& default_instance();

  void Swap(GC_REMOVEEFFECT* other);

  // implements Message ----------------------------------------------

  GC_REMOVEEFFECT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_REMOVEEFFECT& from);
  void MergeFrom(const GC_REMOVEEFFECT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // required int32 effectId = 2;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectIdFieldNumber = 2;
  inline ::google::protobuf::int32 effectid() const;
  inline void set_effectid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_REMOVEEFFECT)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_effectid();
  inline void clear_has_effectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objid_;
  ::google::protobuf::int32 effectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_REMOVEEFFECT* default_instance_;
};
// -------------------------------------------------------------------

class CG_FIGHT : public ::google::protobuf::Message {
 public:
  CG_FIGHT();
  virtual ~CG_FIGHT();

  CG_FIGHT(const CG_FIGHT& from);

  inline CG_FIGHT& operator=(const CG_FIGHT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_FIGHT& default_instance();

  void Swap(CG_FIGHT* other);

  // implements Message ----------------------------------------------

  CG_FIGHT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_FIGHT& from);
  void MergeFrom(const CG_FIGHT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 SceneID = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 1;
  inline ::google::protobuf::int32 sceneid() const;
  inline void set_sceneid(::google::protobuf::int32 value);

  // required int32 Type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int64 AttackId = 3;
  inline bool has_attackid() const;
  inline void clear_attackid();
  static const int kAttackIdFieldNumber = 3;
  inline ::google::protobuf::int64 attackid() const;
  inline void set_attackid(::google::protobuf::int64 value);

  // optional int64 DefenceId = 4;
  inline bool has_defenceid() const;
  inline void clear_defenceid();
  static const int kDefenceIdFieldNumber = 4;
  inline ::google::protobuf::int64 defenceid() const;
  inline void set_defenceid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CG_FIGHT)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_attackid();
  inline void clear_has_attackid();
  inline void set_has_defenceid();
  inline void clear_has_defenceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 sceneid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 attackid_;
  ::google::protobuf::int64 defenceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_FIGHT* default_instance_;
};
// -------------------------------------------------------------------

class CG_LEAVE_COPYSCENE : public ::google::protobuf::Message {
 public:
  CG_LEAVE_COPYSCENE();
  virtual ~CG_LEAVE_COPYSCENE();

  CG_LEAVE_COPYSCENE(const CG_LEAVE_COPYSCENE& from);

  inline CG_LEAVE_COPYSCENE& operator=(const CG_LEAVE_COPYSCENE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_LEAVE_COPYSCENE& default_instance();

  void Swap(CG_LEAVE_COPYSCENE* other);

  // implements Message ----------------------------------------------

  CG_LEAVE_COPYSCENE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_LEAVE_COPYSCENE& from);
  void MergeFrom(const CG_LEAVE_COPYSCENE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 noParam = 1;
  inline bool has_noparam() const;
  inline void clear_noparam();
  static const int kNoParamFieldNumber = 1;
  inline ::google::protobuf::int32 noparam() const;
  inline void set_noparam(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CG_LEAVE_COPYSCENE)
 private:
  inline void set_has_noparam();
  inline void clear_has_noparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 noparam_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_LEAVE_COPYSCENE* default_instance_;
};
// ===================================================================


// ===================================================================

// CG_LOGIN

// required int32 vtype = 1;
inline bool CG_LOGIN::has_vtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_LOGIN::set_has_vtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_LOGIN::clear_has_vtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_LOGIN::clear_vtype() {
  vtype_ = 0;
  clear_has_vtype();
}
inline ::google::protobuf::int32 CG_LOGIN::vtype() const {
  return vtype_;
}
inline void CG_LOGIN::set_vtype(::google::protobuf::int32 value) {
  set_has_vtype();
  vtype_ = value;
}

// required int32 gameversion = 2;
inline bool CG_LOGIN::has_gameversion() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CG_LOGIN::set_has_gameversion() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CG_LOGIN::clear_has_gameversion() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CG_LOGIN::clear_gameversion() {
  gameversion_ = 0;
  clear_has_gameversion();
}
inline ::google::protobuf::int32 CG_LOGIN::gameversion() const {
  return gameversion_;
}
inline void CG_LOGIN::set_gameversion(::google::protobuf::int32 value) {
  set_has_gameversion();
  gameversion_ = value;
}

// required int32 programversion = 3;
inline bool CG_LOGIN::has_programversion() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CG_LOGIN::set_has_programversion() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CG_LOGIN::clear_has_programversion() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CG_LOGIN::clear_programversion() {
  programversion_ = 0;
  clear_has_programversion();
}
inline ::google::protobuf::int32 CG_LOGIN::programversion() const {
  return programversion_;
}
inline void CG_LOGIN::set_programversion(::google::protobuf::int32 value) {
  set_has_programversion();
  programversion_ = value;
}

// required int32 publicresourceversion = 4;
inline bool CG_LOGIN::has_publicresourceversion() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CG_LOGIN::set_has_publicresourceversion() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CG_LOGIN::clear_has_publicresourceversion() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CG_LOGIN::clear_publicresourceversion() {
  publicresourceversion_ = 0;
  clear_has_publicresourceversion();
}
inline ::google::protobuf::int32 CG_LOGIN::publicresourceversion() const {
  return publicresourceversion_;
}
inline void CG_LOGIN::set_publicresourceversion(::google::protobuf::int32 value) {
  set_has_publicresourceversion();
  publicresourceversion_ = value;
}

// required int32 maxpacketid = 5;
inline bool CG_LOGIN::has_maxpacketid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CG_LOGIN::set_has_maxpacketid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CG_LOGIN::clear_has_maxpacketid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CG_LOGIN::clear_maxpacketid() {
  maxpacketid_ = 0;
  clear_has_maxpacketid();
}
inline ::google::protobuf::int32 CG_LOGIN::maxpacketid() const {
  return maxpacketid_;
}
inline void CG_LOGIN::set_maxpacketid(::google::protobuf::int32 value) {
  set_has_maxpacketid();
  maxpacketid_ = value;
}

// required int32 forceenter = 6;
inline bool CG_LOGIN::has_forceenter() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CG_LOGIN::set_has_forceenter() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CG_LOGIN::clear_has_forceenter() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CG_LOGIN::clear_forceenter() {
  forceenter_ = 0;
  clear_has_forceenter();
}
inline ::google::protobuf::int32 CG_LOGIN::forceenter() const {
  return forceenter_;
}
inline void CG_LOGIN::set_forceenter(::google::protobuf::int32 value) {
  set_has_forceenter();
  forceenter_ = value;
}

// required string deviceid = 7;
inline bool CG_LOGIN::has_deviceid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CG_LOGIN::set_has_deviceid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CG_LOGIN::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CG_LOGIN::clear_deviceid() {
  if (deviceid_ != &::google::protobuf::internal::kEmptyString) {
    deviceid_->clear();
  }
  clear_has_deviceid();
}
inline const ::std::string& CG_LOGIN::deviceid() const {
  return *deviceid_;
}
inline void CG_LOGIN::set_deviceid(const ::std::string& value) {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::kEmptyString) {
    deviceid_ = new ::std::string;
  }
  deviceid_->assign(value);
}
inline void CG_LOGIN::set_deviceid(const char* value) {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::kEmptyString) {
    deviceid_ = new ::std::string;
  }
  deviceid_->assign(value);
}
inline void CG_LOGIN::set_deviceid(const char* value, size_t size) {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::kEmptyString) {
    deviceid_ = new ::std::string;
  }
  deviceid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_deviceid() {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::kEmptyString) {
    deviceid_ = new ::std::string;
  }
  return deviceid_;
}
inline ::std::string* CG_LOGIN::release_deviceid() {
  clear_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = deviceid_;
    deviceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid_ != &::google::protobuf::internal::kEmptyString) {
    delete deviceid_;
  }
  if (deviceid) {
    set_has_deviceid();
    deviceid_ = deviceid;
  } else {
    clear_has_deviceid();
    deviceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string devicetype = 8;
inline bool CG_LOGIN::has_devicetype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CG_LOGIN::set_has_devicetype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CG_LOGIN::clear_has_devicetype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CG_LOGIN::clear_devicetype() {
  if (devicetype_ != &::google::protobuf::internal::kEmptyString) {
    devicetype_->clear();
  }
  clear_has_devicetype();
}
inline const ::std::string& CG_LOGIN::devicetype() const {
  return *devicetype_;
}
inline void CG_LOGIN::set_devicetype(const ::std::string& value) {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::kEmptyString) {
    devicetype_ = new ::std::string;
  }
  devicetype_->assign(value);
}
inline void CG_LOGIN::set_devicetype(const char* value) {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::kEmptyString) {
    devicetype_ = new ::std::string;
  }
  devicetype_->assign(value);
}
inline void CG_LOGIN::set_devicetype(const char* value, size_t size) {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::kEmptyString) {
    devicetype_ = new ::std::string;
  }
  devicetype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_devicetype() {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::kEmptyString) {
    devicetype_ = new ::std::string;
  }
  return devicetype_;
}
inline ::std::string* CG_LOGIN::release_devicetype() {
  clear_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = devicetype_;
    devicetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_devicetype(::std::string* devicetype) {
  if (devicetype_ != &::google::protobuf::internal::kEmptyString) {
    delete devicetype_;
  }
  if (devicetype) {
    set_has_devicetype();
    devicetype_ = devicetype;
  } else {
    clear_has_devicetype();
    devicetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string deviceversion = 9;
inline bool CG_LOGIN::has_deviceversion() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CG_LOGIN::set_has_deviceversion() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CG_LOGIN::clear_has_deviceversion() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CG_LOGIN::clear_deviceversion() {
  if (deviceversion_ != &::google::protobuf::internal::kEmptyString) {
    deviceversion_->clear();
  }
  clear_has_deviceversion();
}
inline const ::std::string& CG_LOGIN::deviceversion() const {
  return *deviceversion_;
}
inline void CG_LOGIN::set_deviceversion(const ::std::string& value) {
  set_has_deviceversion();
  if (deviceversion_ == &::google::protobuf::internal::kEmptyString) {
    deviceversion_ = new ::std::string;
  }
  deviceversion_->assign(value);
}
inline void CG_LOGIN::set_deviceversion(const char* value) {
  set_has_deviceversion();
  if (deviceversion_ == &::google::protobuf::internal::kEmptyString) {
    deviceversion_ = new ::std::string;
  }
  deviceversion_->assign(value);
}
inline void CG_LOGIN::set_deviceversion(const char* value, size_t size) {
  set_has_deviceversion();
  if (deviceversion_ == &::google::protobuf::internal::kEmptyString) {
    deviceversion_ = new ::std::string;
  }
  deviceversion_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_deviceversion() {
  set_has_deviceversion();
  if (deviceversion_ == &::google::protobuf::internal::kEmptyString) {
    deviceversion_ = new ::std::string;
  }
  return deviceversion_;
}
inline ::std::string* CG_LOGIN::release_deviceversion() {
  clear_has_deviceversion();
  if (deviceversion_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = deviceversion_;
    deviceversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_deviceversion(::std::string* deviceversion) {
  if (deviceversion_ != &::google::protobuf::internal::kEmptyString) {
    delete deviceversion_;
  }
  if (deviceversion) {
    set_has_deviceversion();
    deviceversion_ = deviceversion;
  } else {
    clear_has_deviceversion();
    deviceversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string account = 10;
inline bool CG_LOGIN::has_account() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CG_LOGIN::set_has_account() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CG_LOGIN::clear_has_account() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CG_LOGIN::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& CG_LOGIN::account() const {
  return *account_;
}
inline void CG_LOGIN::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void CG_LOGIN::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void CG_LOGIN::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* CG_LOGIN::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string validateinfo = 11;
inline bool CG_LOGIN::has_validateinfo() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CG_LOGIN::set_has_validateinfo() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CG_LOGIN::clear_has_validateinfo() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CG_LOGIN::clear_validateinfo() {
  if (validateinfo_ != &::google::protobuf::internal::kEmptyString) {
    validateinfo_->clear();
  }
  clear_has_validateinfo();
}
inline const ::std::string& CG_LOGIN::validateinfo() const {
  return *validateinfo_;
}
inline void CG_LOGIN::set_validateinfo(const ::std::string& value) {
  set_has_validateinfo();
  if (validateinfo_ == &::google::protobuf::internal::kEmptyString) {
    validateinfo_ = new ::std::string;
  }
  validateinfo_->assign(value);
}
inline void CG_LOGIN::set_validateinfo(const char* value) {
  set_has_validateinfo();
  if (validateinfo_ == &::google::protobuf::internal::kEmptyString) {
    validateinfo_ = new ::std::string;
  }
  validateinfo_->assign(value);
}
inline void CG_LOGIN::set_validateinfo(const char* value, size_t size) {
  set_has_validateinfo();
  if (validateinfo_ == &::google::protobuf::internal::kEmptyString) {
    validateinfo_ = new ::std::string;
  }
  validateinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_validateinfo() {
  set_has_validateinfo();
  if (validateinfo_ == &::google::protobuf::internal::kEmptyString) {
    validateinfo_ = new ::std::string;
  }
  return validateinfo_;
}
inline ::std::string* CG_LOGIN::release_validateinfo() {
  clear_has_validateinfo();
  if (validateinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = validateinfo_;
    validateinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_validateinfo(::std::string* validateinfo) {
  if (validateinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete validateinfo_;
  }
  if (validateinfo) {
    set_has_validateinfo();
    validateinfo_ = validateinfo;
  } else {
    clear_has_validateinfo();
    validateinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string channelid = 12;
inline bool CG_LOGIN::has_channelid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CG_LOGIN::set_has_channelid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CG_LOGIN::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CG_LOGIN::clear_channelid() {
  if (channelid_ != &::google::protobuf::internal::kEmptyString) {
    channelid_->clear();
  }
  clear_has_channelid();
}
inline const ::std::string& CG_LOGIN::channelid() const {
  return *channelid_;
}
inline void CG_LOGIN::set_channelid(const ::std::string& value) {
  set_has_channelid();
  if (channelid_ == &::google::protobuf::internal::kEmptyString) {
    channelid_ = new ::std::string;
  }
  channelid_->assign(value);
}
inline void CG_LOGIN::set_channelid(const char* value) {
  set_has_channelid();
  if (channelid_ == &::google::protobuf::internal::kEmptyString) {
    channelid_ = new ::std::string;
  }
  channelid_->assign(value);
}
inline void CG_LOGIN::set_channelid(const char* value, size_t size) {
  set_has_channelid();
  if (channelid_ == &::google::protobuf::internal::kEmptyString) {
    channelid_ = new ::std::string;
  }
  channelid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_channelid() {
  set_has_channelid();
  if (channelid_ == &::google::protobuf::internal::kEmptyString) {
    channelid_ = new ::std::string;
  }
  return channelid_;
}
inline ::std::string* CG_LOGIN::release_channelid() {
  clear_has_channelid();
  if (channelid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = channelid_;
    channelid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_channelid(::std::string* channelid) {
  if (channelid_ != &::google::protobuf::internal::kEmptyString) {
    delete channelid_;
  }
  if (channelid) {
    set_has_channelid();
    channelid_ = channelid;
  } else {
    clear_has_channelid();
    channelid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string mediachannel = 13;
inline bool CG_LOGIN::has_mediachannel() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CG_LOGIN::set_has_mediachannel() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CG_LOGIN::clear_has_mediachannel() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CG_LOGIN::clear_mediachannel() {
  if (mediachannel_ != &::google::protobuf::internal::kEmptyString) {
    mediachannel_->clear();
  }
  clear_has_mediachannel();
}
inline const ::std::string& CG_LOGIN::mediachannel() const {
  return *mediachannel_;
}
inline void CG_LOGIN::set_mediachannel(const ::std::string& value) {
  set_has_mediachannel();
  if (mediachannel_ == &::google::protobuf::internal::kEmptyString) {
    mediachannel_ = new ::std::string;
  }
  mediachannel_->assign(value);
}
inline void CG_LOGIN::set_mediachannel(const char* value) {
  set_has_mediachannel();
  if (mediachannel_ == &::google::protobuf::internal::kEmptyString) {
    mediachannel_ = new ::std::string;
  }
  mediachannel_->assign(value);
}
inline void CG_LOGIN::set_mediachannel(const char* value, size_t size) {
  set_has_mediachannel();
  if (mediachannel_ == &::google::protobuf::internal::kEmptyString) {
    mediachannel_ = new ::std::string;
  }
  mediachannel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_mediachannel() {
  set_has_mediachannel();
  if (mediachannel_ == &::google::protobuf::internal::kEmptyString) {
    mediachannel_ = new ::std::string;
  }
  return mediachannel_;
}
inline ::std::string* CG_LOGIN::release_mediachannel() {
  clear_has_mediachannel();
  if (mediachannel_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mediachannel_;
    mediachannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_mediachannel(::std::string* mediachannel) {
  if (mediachannel_ != &::google::protobuf::internal::kEmptyString) {
    delete mediachannel_;
  }
  if (mediachannel) {
    set_has_mediachannel();
    mediachannel_ = mediachannel;
  } else {
    clear_has_mediachannel();
    mediachannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 rapidvalidatecode = 14;
inline bool CG_LOGIN::has_rapidvalidatecode() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CG_LOGIN::set_has_rapidvalidatecode() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CG_LOGIN::clear_has_rapidvalidatecode() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CG_LOGIN::clear_rapidvalidatecode() {
  rapidvalidatecode_ = 0;
  clear_has_rapidvalidatecode();
}
inline ::google::protobuf::int32 CG_LOGIN::rapidvalidatecode() const {
  return rapidvalidatecode_;
}
inline void CG_LOGIN::set_rapidvalidatecode(::google::protobuf::int32 value) {
  set_has_rapidvalidatecode();
  rapidvalidatecode_ = value;
}

// required int32 reservedint1 = 15;
inline bool CG_LOGIN::has_reservedint1() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CG_LOGIN::set_has_reservedint1() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CG_LOGIN::clear_has_reservedint1() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CG_LOGIN::clear_reservedint1() {
  reservedint1_ = 0;
  clear_has_reservedint1();
}
inline ::google::protobuf::int32 CG_LOGIN::reservedint1() const {
  return reservedint1_;
}
inline void CG_LOGIN::set_reservedint1(::google::protobuf::int32 value) {
  set_has_reservedint1();
  reservedint1_ = value;
}

// required int32 reservedint2 = 16;
inline bool CG_LOGIN::has_reservedint2() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CG_LOGIN::set_has_reservedint2() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CG_LOGIN::clear_has_reservedint2() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CG_LOGIN::clear_reservedint2() {
  reservedint2_ = 0;
  clear_has_reservedint2();
}
inline ::google::protobuf::int32 CG_LOGIN::reservedint2() const {
  return reservedint2_;
}
inline void CG_LOGIN::set_reservedint2(::google::protobuf::int32 value) {
  set_has_reservedint2();
  reservedint2_ = value;
}

// required int32 reservedint3 = 17;
inline bool CG_LOGIN::has_reservedint3() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CG_LOGIN::set_has_reservedint3() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CG_LOGIN::clear_has_reservedint3() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CG_LOGIN::clear_reservedint3() {
  reservedint3_ = 0;
  clear_has_reservedint3();
}
inline ::google::protobuf::int32 CG_LOGIN::reservedint3() const {
  return reservedint3_;
}
inline void CG_LOGIN::set_reservedint3(::google::protobuf::int32 value) {
  set_has_reservedint3();
  reservedint3_ = value;
}

// required int32 reservedint4 = 18;
inline bool CG_LOGIN::has_reservedint4() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CG_LOGIN::set_has_reservedint4() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CG_LOGIN::clear_has_reservedint4() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CG_LOGIN::clear_reservedint4() {
  reservedint4_ = 0;
  clear_has_reservedint4();
}
inline ::google::protobuf::int32 CG_LOGIN::reservedint4() const {
  return reservedint4_;
}
inline void CG_LOGIN::set_reservedint4(::google::protobuf::int32 value) {
  set_has_reservedint4();
  reservedint4_ = value;
}

// required string reservedstring1 = 19;
inline bool CG_LOGIN::has_reservedstring1() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CG_LOGIN::set_has_reservedstring1() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CG_LOGIN::clear_has_reservedstring1() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CG_LOGIN::clear_reservedstring1() {
  if (reservedstring1_ != &::google::protobuf::internal::kEmptyString) {
    reservedstring1_->clear();
  }
  clear_has_reservedstring1();
}
inline const ::std::string& CG_LOGIN::reservedstring1() const {
  return *reservedstring1_;
}
inline void CG_LOGIN::set_reservedstring1(const ::std::string& value) {
  set_has_reservedstring1();
  if (reservedstring1_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring1_ = new ::std::string;
  }
  reservedstring1_->assign(value);
}
inline void CG_LOGIN::set_reservedstring1(const char* value) {
  set_has_reservedstring1();
  if (reservedstring1_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring1_ = new ::std::string;
  }
  reservedstring1_->assign(value);
}
inline void CG_LOGIN::set_reservedstring1(const char* value, size_t size) {
  set_has_reservedstring1();
  if (reservedstring1_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring1_ = new ::std::string;
  }
  reservedstring1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_reservedstring1() {
  set_has_reservedstring1();
  if (reservedstring1_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring1_ = new ::std::string;
  }
  return reservedstring1_;
}
inline ::std::string* CG_LOGIN::release_reservedstring1() {
  clear_has_reservedstring1();
  if (reservedstring1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reservedstring1_;
    reservedstring1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_reservedstring1(::std::string* reservedstring1) {
  if (reservedstring1_ != &::google::protobuf::internal::kEmptyString) {
    delete reservedstring1_;
  }
  if (reservedstring1) {
    set_has_reservedstring1();
    reservedstring1_ = reservedstring1;
  } else {
    clear_has_reservedstring1();
    reservedstring1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string reservedstring2 = 20;
inline bool CG_LOGIN::has_reservedstring2() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CG_LOGIN::set_has_reservedstring2() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CG_LOGIN::clear_has_reservedstring2() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CG_LOGIN::clear_reservedstring2() {
  if (reservedstring2_ != &::google::protobuf::internal::kEmptyString) {
    reservedstring2_->clear();
  }
  clear_has_reservedstring2();
}
inline const ::std::string& CG_LOGIN::reservedstring2() const {
  return *reservedstring2_;
}
inline void CG_LOGIN::set_reservedstring2(const ::std::string& value) {
  set_has_reservedstring2();
  if (reservedstring2_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring2_ = new ::std::string;
  }
  reservedstring2_->assign(value);
}
inline void CG_LOGIN::set_reservedstring2(const char* value) {
  set_has_reservedstring2();
  if (reservedstring2_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring2_ = new ::std::string;
  }
  reservedstring2_->assign(value);
}
inline void CG_LOGIN::set_reservedstring2(const char* value, size_t size) {
  set_has_reservedstring2();
  if (reservedstring2_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring2_ = new ::std::string;
  }
  reservedstring2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_reservedstring2() {
  set_has_reservedstring2();
  if (reservedstring2_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring2_ = new ::std::string;
  }
  return reservedstring2_;
}
inline ::std::string* CG_LOGIN::release_reservedstring2() {
  clear_has_reservedstring2();
  if (reservedstring2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reservedstring2_;
    reservedstring2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_reservedstring2(::std::string* reservedstring2) {
  if (reservedstring2_ != &::google::protobuf::internal::kEmptyString) {
    delete reservedstring2_;
  }
  if (reservedstring2) {
    set_has_reservedstring2();
    reservedstring2_ = reservedstring2;
  } else {
    clear_has_reservedstring2();
    reservedstring2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string reservedstring3 = 21;
inline bool CG_LOGIN::has_reservedstring3() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CG_LOGIN::set_has_reservedstring3() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CG_LOGIN::clear_has_reservedstring3() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CG_LOGIN::clear_reservedstring3() {
  if (reservedstring3_ != &::google::protobuf::internal::kEmptyString) {
    reservedstring3_->clear();
  }
  clear_has_reservedstring3();
}
inline const ::std::string& CG_LOGIN::reservedstring3() const {
  return *reservedstring3_;
}
inline void CG_LOGIN::set_reservedstring3(const ::std::string& value) {
  set_has_reservedstring3();
  if (reservedstring3_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring3_ = new ::std::string;
  }
  reservedstring3_->assign(value);
}
inline void CG_LOGIN::set_reservedstring3(const char* value) {
  set_has_reservedstring3();
  if (reservedstring3_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring3_ = new ::std::string;
  }
  reservedstring3_->assign(value);
}
inline void CG_LOGIN::set_reservedstring3(const char* value, size_t size) {
  set_has_reservedstring3();
  if (reservedstring3_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring3_ = new ::std::string;
  }
  reservedstring3_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_reservedstring3() {
  set_has_reservedstring3();
  if (reservedstring3_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring3_ = new ::std::string;
  }
  return reservedstring3_;
}
inline ::std::string* CG_LOGIN::release_reservedstring3() {
  clear_has_reservedstring3();
  if (reservedstring3_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reservedstring3_;
    reservedstring3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_reservedstring3(::std::string* reservedstring3) {
  if (reservedstring3_ != &::google::protobuf::internal::kEmptyString) {
    delete reservedstring3_;
  }
  if (reservedstring3) {
    set_has_reservedstring3();
    reservedstring3_ = reservedstring3;
  } else {
    clear_has_reservedstring3();
    reservedstring3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string reservedstring4 = 22;
inline bool CG_LOGIN::has_reservedstring4() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CG_LOGIN::set_has_reservedstring4() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CG_LOGIN::clear_has_reservedstring4() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CG_LOGIN::clear_reservedstring4() {
  if (reservedstring4_ != &::google::protobuf::internal::kEmptyString) {
    reservedstring4_->clear();
  }
  clear_has_reservedstring4();
}
inline const ::std::string& CG_LOGIN::reservedstring4() const {
  return *reservedstring4_;
}
inline void CG_LOGIN::set_reservedstring4(const ::std::string& value) {
  set_has_reservedstring4();
  if (reservedstring4_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring4_ = new ::std::string;
  }
  reservedstring4_->assign(value);
}
inline void CG_LOGIN::set_reservedstring4(const char* value) {
  set_has_reservedstring4();
  if (reservedstring4_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring4_ = new ::std::string;
  }
  reservedstring4_->assign(value);
}
inline void CG_LOGIN::set_reservedstring4(const char* value, size_t size) {
  set_has_reservedstring4();
  if (reservedstring4_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring4_ = new ::std::string;
  }
  reservedstring4_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_reservedstring4() {
  set_has_reservedstring4();
  if (reservedstring4_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring4_ = new ::std::string;
  }
  return reservedstring4_;
}
inline ::std::string* CG_LOGIN::release_reservedstring4() {
  clear_has_reservedstring4();
  if (reservedstring4_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reservedstring4_;
    reservedstring4_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_reservedstring4(::std::string* reservedstring4) {
  if (reservedstring4_ != &::google::protobuf::internal::kEmptyString) {
    delete reservedstring4_;
  }
  if (reservedstring4) {
    set_has_reservedstring4();
    reservedstring4_ = reservedstring4;
  } else {
    clear_has_reservedstring4();
    reservedstring4_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GC_LOGIN_RET

// required int32 result = 1;
inline bool GC_LOGIN_RET::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_LOGIN_RET::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_LOGIN_RET::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_LOGIN_RET::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::result() const {
  return result_;
}
inline void GC_LOGIN_RET::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 validateresult = 2;
inline bool GC_LOGIN_RET::has_validateresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_LOGIN_RET::set_has_validateresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_LOGIN_RET::clear_has_validateresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_LOGIN_RET::clear_validateresult() {
  validateresult_ = 0;
  clear_has_validateresult();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::validateresult() const {
  return validateresult_;
}
inline void GC_LOGIN_RET::set_validateresult(::google::protobuf::int32 value) {
  set_has_validateresult();
  validateresult_ = value;
}

// required string userid = 3;
inline bool GC_LOGIN_RET::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_LOGIN_RET::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_LOGIN_RET::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_LOGIN_RET::clear_userid() {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    userid_->clear();
  }
  clear_has_userid();
}
inline const ::std::string& GC_LOGIN_RET::userid() const {
  return *userid_;
}
inline void GC_LOGIN_RET::set_userid(const ::std::string& value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void GC_LOGIN_RET::set_userid(const char* value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void GC_LOGIN_RET::set_userid(const char* value, size_t size) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_LOGIN_RET::mutable_userid() {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  return userid_;
}
inline ::std::string* GC_LOGIN_RET::release_userid() {
  clear_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userid_;
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GC_LOGIN_RET::set_allocated_userid(::std::string* userid) {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    delete userid_;
  }
  if (userid) {
    set_has_userid();
    userid_ = userid;
  } else {
    clear_has_userid();
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string oid = 4;
inline bool GC_LOGIN_RET::has_oid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GC_LOGIN_RET::set_has_oid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GC_LOGIN_RET::clear_has_oid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GC_LOGIN_RET::clear_oid() {
  if (oid_ != &::google::protobuf::internal::kEmptyString) {
    oid_->clear();
  }
  clear_has_oid();
}
inline const ::std::string& GC_LOGIN_RET::oid() const {
  return *oid_;
}
inline void GC_LOGIN_RET::set_oid(const ::std::string& value) {
  set_has_oid();
  if (oid_ == &::google::protobuf::internal::kEmptyString) {
    oid_ = new ::std::string;
  }
  oid_->assign(value);
}
inline void GC_LOGIN_RET::set_oid(const char* value) {
  set_has_oid();
  if (oid_ == &::google::protobuf::internal::kEmptyString) {
    oid_ = new ::std::string;
  }
  oid_->assign(value);
}
inline void GC_LOGIN_RET::set_oid(const char* value, size_t size) {
  set_has_oid();
  if (oid_ == &::google::protobuf::internal::kEmptyString) {
    oid_ = new ::std::string;
  }
  oid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_LOGIN_RET::mutable_oid() {
  set_has_oid();
  if (oid_ == &::google::protobuf::internal::kEmptyString) {
    oid_ = new ::std::string;
  }
  return oid_;
}
inline ::std::string* GC_LOGIN_RET::release_oid() {
  clear_has_oid();
  if (oid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = oid_;
    oid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GC_LOGIN_RET::set_allocated_oid(::std::string* oid) {
  if (oid_ != &::google::protobuf::internal::kEmptyString) {
    delete oid_;
  }
  if (oid) {
    set_has_oid();
    oid_ = oid;
  } else {
    clear_has_oid();
    oid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string accesstoken = 5;
inline bool GC_LOGIN_RET::has_accesstoken() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GC_LOGIN_RET::set_has_accesstoken() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GC_LOGIN_RET::clear_has_accesstoken() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GC_LOGIN_RET::clear_accesstoken() {
  if (accesstoken_ != &::google::protobuf::internal::kEmptyString) {
    accesstoken_->clear();
  }
  clear_has_accesstoken();
}
inline const ::std::string& GC_LOGIN_RET::accesstoken() const {
  return *accesstoken_;
}
inline void GC_LOGIN_RET::set_accesstoken(const ::std::string& value) {
  set_has_accesstoken();
  if (accesstoken_ == &::google::protobuf::internal::kEmptyString) {
    accesstoken_ = new ::std::string;
  }
  accesstoken_->assign(value);
}
inline void GC_LOGIN_RET::set_accesstoken(const char* value) {
  set_has_accesstoken();
  if (accesstoken_ == &::google::protobuf::internal::kEmptyString) {
    accesstoken_ = new ::std::string;
  }
  accesstoken_->assign(value);
}
inline void GC_LOGIN_RET::set_accesstoken(const char* value, size_t size) {
  set_has_accesstoken();
  if (accesstoken_ == &::google::protobuf::internal::kEmptyString) {
    accesstoken_ = new ::std::string;
  }
  accesstoken_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_LOGIN_RET::mutable_accesstoken() {
  set_has_accesstoken();
  if (accesstoken_ == &::google::protobuf::internal::kEmptyString) {
    accesstoken_ = new ::std::string;
  }
  return accesstoken_;
}
inline ::std::string* GC_LOGIN_RET::release_accesstoken() {
  clear_has_accesstoken();
  if (accesstoken_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = accesstoken_;
    accesstoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GC_LOGIN_RET::set_allocated_accesstoken(::std::string* accesstoken) {
  if (accesstoken_ != &::google::protobuf::internal::kEmptyString) {
    delete accesstoken_;
  }
  if (accesstoken) {
    set_has_accesstoken();
    accesstoken_ = accesstoken;
  } else {
    clear_has_accesstoken();
    accesstoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 rapidvalidatecode = 6;
inline bool GC_LOGIN_RET::has_rapidvalidatecode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GC_LOGIN_RET::set_has_rapidvalidatecode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GC_LOGIN_RET::clear_has_rapidvalidatecode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GC_LOGIN_RET::clear_rapidvalidatecode() {
  rapidvalidatecode_ = 0;
  clear_has_rapidvalidatecode();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::rapidvalidatecode() const {
  return rapidvalidatecode_;
}
inline void GC_LOGIN_RET::set_rapidvalidatecode(::google::protobuf::int32 value) {
  set_has_rapidvalidatecode();
  rapidvalidatecode_ = value;
}

// repeated uint64 roleGUIDList = 7;
inline int GC_LOGIN_RET::roleguidlist_size() const {
  return roleguidlist_.size();
}
inline void GC_LOGIN_RET::clear_roleguidlist() {
  roleguidlist_.Clear();
}
inline ::google::protobuf::uint64 GC_LOGIN_RET::roleguidlist(int index) const {
  return roleguidlist_.Get(index);
}
inline void GC_LOGIN_RET::set_roleguidlist(int index, ::google::protobuf::uint64 value) {
  roleguidlist_.Set(index, value);
}
inline void GC_LOGIN_RET::add_roleguidlist(::google::protobuf::uint64 value) {
  roleguidlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GC_LOGIN_RET::roleguidlist() const {
  return roleguidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GC_LOGIN_RET::mutable_roleguidlist() {
  return &roleguidlist_;
}

// repeated int32 roleTypeList = 8;
inline int GC_LOGIN_RET::roletypelist_size() const {
  return roletypelist_.size();
}
inline void GC_LOGIN_RET::clear_roletypelist() {
  roletypelist_.Clear();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::roletypelist(int index) const {
  return roletypelist_.Get(index);
}
inline void GC_LOGIN_RET::set_roletypelist(int index, ::google::protobuf::int32 value) {
  roletypelist_.Set(index, value);
}
inline void GC_LOGIN_RET::add_roletypelist(::google::protobuf::int32 value) {
  roletypelist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_LOGIN_RET::roletypelist() const {
  return roletypelist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_LOGIN_RET::mutable_roletypelist() {
  return &roletypelist_;
}

// repeated string playerNameList = 9;
inline int GC_LOGIN_RET::playernamelist_size() const {
  return playernamelist_.size();
}
inline void GC_LOGIN_RET::clear_playernamelist() {
  playernamelist_.Clear();
}
inline const ::std::string& GC_LOGIN_RET::playernamelist(int index) const {
  return playernamelist_.Get(index);
}
inline ::std::string* GC_LOGIN_RET::mutable_playernamelist(int index) {
  return playernamelist_.Mutable(index);
}
inline void GC_LOGIN_RET::set_playernamelist(int index, const ::std::string& value) {
  playernamelist_.Mutable(index)->assign(value);
}
inline void GC_LOGIN_RET::set_playernamelist(int index, const char* value) {
  playernamelist_.Mutable(index)->assign(value);
}
inline void GC_LOGIN_RET::set_playernamelist(int index, const char* value, size_t size) {
  playernamelist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_LOGIN_RET::add_playernamelist() {
  return playernamelist_.Add();
}
inline void GC_LOGIN_RET::add_playernamelist(const ::std::string& value) {
  playernamelist_.Add()->assign(value);
}
inline void GC_LOGIN_RET::add_playernamelist(const char* value) {
  playernamelist_.Add()->assign(value);
}
inline void GC_LOGIN_RET::add_playernamelist(const char* value, size_t size) {
  playernamelist_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GC_LOGIN_RET::playernamelist() const {
  return playernamelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GC_LOGIN_RET::mutable_playernamelist() {
  return &playernamelist_;
}

// repeated int32 roleLevelList = 10;
inline int GC_LOGIN_RET::rolelevellist_size() const {
  return rolelevellist_.size();
}
inline void GC_LOGIN_RET::clear_rolelevellist() {
  rolelevellist_.Clear();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::rolelevellist(int index) const {
  return rolelevellist_.Get(index);
}
inline void GC_LOGIN_RET::set_rolelevellist(int index, ::google::protobuf::int32 value) {
  rolelevellist_.Set(index, value);
}
inline void GC_LOGIN_RET::add_rolelevellist(::google::protobuf::int32 value) {
  rolelevellist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_LOGIN_RET::rolelevellist() const {
  return rolelevellist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_LOGIN_RET::mutable_rolelevellist() {
  return &rolelevellist_;
}

// repeated int32 ModelVisualID = 11;
inline int GC_LOGIN_RET::modelvisualid_size() const {
  return modelvisualid_.size();
}
inline void GC_LOGIN_RET::clear_modelvisualid() {
  modelvisualid_.Clear();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::modelvisualid(int index) const {
  return modelvisualid_.Get(index);
}
inline void GC_LOGIN_RET::set_modelvisualid(int index, ::google::protobuf::int32 value) {
  modelvisualid_.Set(index, value);
}
inline void GC_LOGIN_RET::add_modelvisualid(::google::protobuf::int32 value) {
  modelvisualid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_LOGIN_RET::modelvisualid() const {
  return modelvisualid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_LOGIN_RET::mutable_modelvisualid() {
  return &modelvisualid_;
}

// repeated int32 WeaponID = 12;
inline int GC_LOGIN_RET::weaponid_size() const {
  return weaponid_.size();
}
inline void GC_LOGIN_RET::clear_weaponid() {
  weaponid_.Clear();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::weaponid(int index) const {
  return weaponid_.Get(index);
}
inline void GC_LOGIN_RET::set_weaponid(int index, ::google::protobuf::int32 value) {
  weaponid_.Set(index, value);
}
inline void GC_LOGIN_RET::add_weaponid(::google::protobuf::int32 value) {
  weaponid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_LOGIN_RET::weaponid() const {
  return weaponid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_LOGIN_RET::mutable_weaponid() {
  return &weaponid_;
}

// repeated int32 WeaponEffectGem = 13;
inline int GC_LOGIN_RET::weaponeffectgem_size() const {
  return weaponeffectgem_.size();
}
inline void GC_LOGIN_RET::clear_weaponeffectgem() {
  weaponeffectgem_.Clear();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::weaponeffectgem(int index) const {
  return weaponeffectgem_.Get(index);
}
inline void GC_LOGIN_RET::set_weaponeffectgem(int index, ::google::protobuf::int32 value) {
  weaponeffectgem_.Set(index, value);
}
inline void GC_LOGIN_RET::add_weaponeffectgem(::google::protobuf::int32 value) {
  weaponeffectgem_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_LOGIN_RET::weaponeffectgem() const {
  return weaponeffectgem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_LOGIN_RET::mutable_weaponeffectgem() {
  return &weaponeffectgem_;
}

// repeated int32 HuanHuaWeaponModel = 14;
inline int GC_LOGIN_RET::huanhuaweaponmodel_size() const {
  return huanhuaweaponmodel_.size();
}
inline void GC_LOGIN_RET::clear_huanhuaweaponmodel() {
  huanhuaweaponmodel_.Clear();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::huanhuaweaponmodel(int index) const {
  return huanhuaweaponmodel_.Get(index);
}
inline void GC_LOGIN_RET::set_huanhuaweaponmodel(int index, ::google::protobuf::int32 value) {
  huanhuaweaponmodel_.Set(index, value);
}
inline void GC_LOGIN_RET::add_huanhuaweaponmodel(::google::protobuf::int32 value) {
  huanhuaweaponmodel_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_LOGIN_RET::huanhuaweaponmodel() const {
  return huanhuaweaponmodel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_LOGIN_RET::mutable_huanhuaweaponmodel() {
  return &huanhuaweaponmodel_;
}

// -------------------------------------------------------------------

// CG_CONNECTED_HEARTBEAT

// required int32 isresponse = 1;
inline bool CG_CONNECTED_HEARTBEAT::has_isresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_CONNECTED_HEARTBEAT::set_has_isresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_CONNECTED_HEARTBEAT::clear_has_isresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_CONNECTED_HEARTBEAT::clear_isresponse() {
  isresponse_ = 0;
  clear_has_isresponse();
}
inline ::google::protobuf::int32 CG_CONNECTED_HEARTBEAT::isresponse() const {
  return isresponse_;
}
inline void CG_CONNECTED_HEARTBEAT::set_isresponse(::google::protobuf::int32 value) {
  set_has_isresponse();
  isresponse_ = value;
}

// -------------------------------------------------------------------

// GC_CONNECTED_HEARTBEAT

// required int32 serveransitime = 1;
inline bool GC_CONNECTED_HEARTBEAT::has_serveransitime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_CONNECTED_HEARTBEAT::set_has_serveransitime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_CONNECTED_HEARTBEAT::clear_has_serveransitime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_CONNECTED_HEARTBEAT::clear_serveransitime() {
  serveransitime_ = 0;
  clear_has_serveransitime();
}
inline ::google::protobuf::int32 GC_CONNECTED_HEARTBEAT::serveransitime() const {
  return serveransitime_;
}
inline void GC_CONNECTED_HEARTBEAT::set_serveransitime(::google::protobuf::int32 value) {
  set_has_serveransitime();
  serveransitime_ = value;
}

// -------------------------------------------------------------------

// CG_REQ_NEAR_LIST

// required int64 marchId = 1;
inline bool CG_REQ_NEAR_LIST::has_marchid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_REQ_NEAR_LIST::set_has_marchid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_REQ_NEAR_LIST::clear_has_marchid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_REQ_NEAR_LIST::clear_marchid() {
  marchid_ = GOOGLE_LONGLONG(0);
  clear_has_marchid();
}
inline ::google::protobuf::int64 CG_REQ_NEAR_LIST::marchid() const {
  return marchid_;
}
inline void CG_REQ_NEAR_LIST::set_marchid(::google::protobuf::int64 value) {
  set_has_marchid();
  marchid_ = value;
}

// -------------------------------------------------------------------

// GC_NEAR_MARCHLIST

// repeated uint64 Guid = 1;
inline int GC_NEAR_MARCHLIST::guid_size() const {
  return guid_.size();
}
inline void GC_NEAR_MARCHLIST::clear_guid() {
  guid_.Clear();
}
inline ::google::protobuf::uint64 GC_NEAR_MARCHLIST::guid(int index) const {
  return guid_.Get(index);
}
inline void GC_NEAR_MARCHLIST::set_guid(int index, ::google::protobuf::uint64 value) {
  guid_.Set(index, value);
}
inline void GC_NEAR_MARCHLIST::add_guid(::google::protobuf::uint64 value) {
  guid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GC_NEAR_MARCHLIST::guid() const {
  return guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GC_NEAR_MARCHLIST::mutable_guid() {
  return &guid_;
}

// repeated string Name = 2;
inline int GC_NEAR_MARCHLIST::name_size() const {
  return name_.size();
}
inline void GC_NEAR_MARCHLIST::clear_name() {
  name_.Clear();
}
inline const ::std::string& GC_NEAR_MARCHLIST::name(int index) const {
  return name_.Get(index);
}
inline ::std::string* GC_NEAR_MARCHLIST::mutable_name(int index) {
  return name_.Mutable(index);
}
inline void GC_NEAR_MARCHLIST::set_name(int index, const ::std::string& value) {
  name_.Mutable(index)->assign(value);
}
inline void GC_NEAR_MARCHLIST::set_name(int index, const char* value) {
  name_.Mutable(index)->assign(value);
}
inline void GC_NEAR_MARCHLIST::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_NEAR_MARCHLIST::add_name() {
  return name_.Add();
}
inline void GC_NEAR_MARCHLIST::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
}
inline void GC_NEAR_MARCHLIST::add_name(const char* value) {
  name_.Add()->assign(value);
}
inline void GC_NEAR_MARCHLIST::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GC_NEAR_MARCHLIST::name() const {
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GC_NEAR_MARCHLIST::mutable_name() {
  return &name_;
}

// repeated int32 Level = 3;
inline int GC_NEAR_MARCHLIST::level_size() const {
  return level_.size();
}
inline void GC_NEAR_MARCHLIST::clear_level() {
  level_.Clear();
}
inline ::google::protobuf::int32 GC_NEAR_MARCHLIST::level(int index) const {
  return level_.Get(index);
}
inline void GC_NEAR_MARCHLIST::set_level(int index, ::google::protobuf::int32 value) {
  level_.Set(index, value);
}
inline void GC_NEAR_MARCHLIST::add_level(::google::protobuf::int32 value) {
  level_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_NEAR_MARCHLIST::level() const {
  return level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_NEAR_MARCHLIST::mutable_level() {
  return &level_;
}

// repeated int32 CombatNum = 4;
inline int GC_NEAR_MARCHLIST::combatnum_size() const {
  return combatnum_.size();
}
inline void GC_NEAR_MARCHLIST::clear_combatnum() {
  combatnum_.Clear();
}
inline ::google::protobuf::int32 GC_NEAR_MARCHLIST::combatnum(int index) const {
  return combatnum_.Get(index);
}
inline void GC_NEAR_MARCHLIST::set_combatnum(int index, ::google::protobuf::int32 value) {
  combatnum_.Set(index, value);
}
inline void GC_NEAR_MARCHLIST::add_combatnum(::google::protobuf::int32 value) {
  combatnum_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_NEAR_MARCHLIST::combatnum() const {
  return combatnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_NEAR_MARCHLIST::mutable_combatnum() {
  return &combatnum_;
}

// -------------------------------------------------------------------

// CG_CHAT

// required int32 chattype = 1;
inline bool CG_CHAT::has_chattype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_CHAT::set_has_chattype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_CHAT::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_CHAT::clear_chattype() {
  chattype_ = 0;
  clear_has_chattype();
}
inline ::google::protobuf::int32 CG_CHAT::chattype() const {
  return chattype_;
}
inline void CG_CHAT::set_chattype(::google::protobuf::int32 value) {
  set_has_chattype();
  chattype_ = value;
}

// required string chatinfo = 2;
inline bool CG_CHAT::has_chatinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CG_CHAT::set_has_chatinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CG_CHAT::clear_has_chatinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CG_CHAT::clear_chatinfo() {
  if (chatinfo_ != &::google::protobuf::internal::kEmptyString) {
    chatinfo_->clear();
  }
  clear_has_chatinfo();
}
inline const ::std::string& CG_CHAT::chatinfo() const {
  return *chatinfo_;
}
inline void CG_CHAT::set_chatinfo(const ::std::string& value) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(value);
}
inline void CG_CHAT::set_chatinfo(const char* value) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(value);
}
inline void CG_CHAT::set_chatinfo(const char* value, size_t size) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_CHAT::mutable_chatinfo() {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  return chatinfo_;
}
inline ::std::string* CG_CHAT::release_chatinfo() {
  clear_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = chatinfo_;
    chatinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_CHAT::set_allocated_chatinfo(::std::string* chatinfo) {
  if (chatinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete chatinfo_;
  }
  if (chatinfo) {
    set_has_chatinfo();
    chatinfo_ = chatinfo;
  } else {
    clear_has_chatinfo();
    chatinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 receiverguid = 3;
inline bool CG_CHAT::has_receiverguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CG_CHAT::set_has_receiverguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CG_CHAT::clear_has_receiverguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CG_CHAT::clear_receiverguid() {
  receiverguid_ = GOOGLE_ULONGLONG(0);
  clear_has_receiverguid();
}
inline ::google::protobuf::uint64 CG_CHAT::receiverguid() const {
  return receiverguid_;
}
inline void CG_CHAT::set_receiverguid(::google::protobuf::uint64 value) {
  set_has_receiverguid();
  receiverguid_ = value;
}

// optional string receivername = 4;
inline bool CG_CHAT::has_receivername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CG_CHAT::set_has_receivername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CG_CHAT::clear_has_receivername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CG_CHAT::clear_receivername() {
  if (receivername_ != &::google::protobuf::internal::kEmptyString) {
    receivername_->clear();
  }
  clear_has_receivername();
}
inline const ::std::string& CG_CHAT::receivername() const {
  return *receivername_;
}
inline void CG_CHAT::set_receivername(const ::std::string& value) {
  set_has_receivername();
  if (receivername_ == &::google::protobuf::internal::kEmptyString) {
    receivername_ = new ::std::string;
  }
  receivername_->assign(value);
}
inline void CG_CHAT::set_receivername(const char* value) {
  set_has_receivername();
  if (receivername_ == &::google::protobuf::internal::kEmptyString) {
    receivername_ = new ::std::string;
  }
  receivername_->assign(value);
}
inline void CG_CHAT::set_receivername(const char* value, size_t size) {
  set_has_receivername();
  if (receivername_ == &::google::protobuf::internal::kEmptyString) {
    receivername_ = new ::std::string;
  }
  receivername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_CHAT::mutable_receivername() {
  set_has_receivername();
  if (receivername_ == &::google::protobuf::internal::kEmptyString) {
    receivername_ = new ::std::string;
  }
  return receivername_;
}
inline ::std::string* CG_CHAT::release_receivername() {
  clear_has_receivername();
  if (receivername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = receivername_;
    receivername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_CHAT::set_allocated_receivername(::std::string* receivername) {
  if (receivername_ != &::google::protobuf::internal::kEmptyString) {
    delete receivername_;
  }
  if (receivername) {
    set_has_receivername();
    receivername_ = receivername;
  } else {
    clear_has_receivername();
    receivername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 receiverlevel = 5;
inline bool CG_CHAT::has_receiverlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CG_CHAT::set_has_receiverlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CG_CHAT::clear_has_receiverlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CG_CHAT::clear_receiverlevel() {
  receiverlevel_ = 0;
  clear_has_receiverlevel();
}
inline ::google::protobuf::int32 CG_CHAT::receiverlevel() const {
  return receiverlevel_;
}
inline void CG_CHAT::set_receiverlevel(::google::protobuf::int32 value) {
  set_has_receiverlevel();
  receiverlevel_ = value;
}

// -------------------------------------------------------------------

// GC_CHAT

// required int32 chattype = 1;
inline bool GC_CHAT::has_chattype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_CHAT::set_has_chattype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_CHAT::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_CHAT::clear_chattype() {
  chattype_ = 0;
  clear_has_chattype();
}
inline ::google::protobuf::int32 GC_CHAT::chattype() const {
  return chattype_;
}
inline void GC_CHAT::set_chattype(::google::protobuf::int32 value) {
  set_has_chattype();
  chattype_ = value;
}

// required string chatinfo = 2;
inline bool GC_CHAT::has_chatinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_CHAT::set_has_chatinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_CHAT::clear_has_chatinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_CHAT::clear_chatinfo() {
  if (chatinfo_ != &::google::protobuf::internal::kEmptyString) {
    chatinfo_->clear();
  }
  clear_has_chatinfo();
}
inline const ::std::string& GC_CHAT::chatinfo() const {
  return *chatinfo_;
}
inline void GC_CHAT::set_chatinfo(const ::std::string& value) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(value);
}
inline void GC_CHAT::set_chatinfo(const char* value) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(value);
}
inline void GC_CHAT::set_chatinfo(const char* value, size_t size) {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  chatinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_CHAT::mutable_chatinfo() {
  set_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    chatinfo_ = new ::std::string;
  }
  return chatinfo_;
}
inline ::std::string* GC_CHAT::release_chatinfo() {
  clear_has_chatinfo();
  if (chatinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = chatinfo_;
    chatinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GC_CHAT::set_allocated_chatinfo(::std::string* chatinfo) {
  if (chatinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete chatinfo_;
  }
  if (chatinfo) {
    set_has_chatinfo();
    chatinfo_ = chatinfo;
  } else {
    clear_has_chatinfo();
    chatinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 senderguid = 3;
inline bool GC_CHAT::has_senderguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_CHAT::set_has_senderguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_CHAT::clear_has_senderguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_CHAT::clear_senderguid() {
  senderguid_ = GOOGLE_ULONGLONG(0);
  clear_has_senderguid();
}
inline ::google::protobuf::uint64 GC_CHAT::senderguid() const {
  return senderguid_;
}
inline void GC_CHAT::set_senderguid(::google::protobuf::uint64 value) {
  set_has_senderguid();
  senderguid_ = value;
}

// optional string sendername = 4;
inline bool GC_CHAT::has_sendername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GC_CHAT::set_has_sendername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GC_CHAT::clear_has_sendername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GC_CHAT::clear_sendername() {
  if (sendername_ != &::google::protobuf::internal::kEmptyString) {
    sendername_->clear();
  }
  clear_has_sendername();
}
inline const ::std::string& GC_CHAT::sendername() const {
  return *sendername_;
}
inline void GC_CHAT::set_sendername(const ::std::string& value) {
  set_has_sendername();
  if (sendername_ == &::google::protobuf::internal::kEmptyString) {
    sendername_ = new ::std::string;
  }
  sendername_->assign(value);
}
inline void GC_CHAT::set_sendername(const char* value) {
  set_has_sendername();
  if (sendername_ == &::google::protobuf::internal::kEmptyString) {
    sendername_ = new ::std::string;
  }
  sendername_->assign(value);
}
inline void GC_CHAT::set_sendername(const char* value, size_t size) {
  set_has_sendername();
  if (sendername_ == &::google::protobuf::internal::kEmptyString) {
    sendername_ = new ::std::string;
  }
  sendername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_CHAT::mutable_sendername() {
  set_has_sendername();
  if (sendername_ == &::google::protobuf::internal::kEmptyString) {
    sendername_ = new ::std::string;
  }
  return sendername_;
}
inline ::std::string* GC_CHAT::release_sendername() {
  clear_has_sendername();
  if (sendername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sendername_;
    sendername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GC_CHAT::set_allocated_sendername(::std::string* sendername) {
  if (sendername_ != &::google::protobuf::internal::kEmptyString) {
    delete sendername_;
  }
  if (sendername) {
    set_has_sendername();
    sendername_ = sendername;
  } else {
    clear_has_sendername();
    sendername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 senderlevel = 5;
inline bool GC_CHAT::has_senderlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GC_CHAT::set_has_senderlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GC_CHAT::clear_has_senderlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GC_CHAT::clear_senderlevel() {
  senderlevel_ = 0;
  clear_has_senderlevel();
}
inline ::google::protobuf::int32 GC_CHAT::senderlevel() const {
  return senderlevel_;
}
inline void GC_CHAT::set_senderlevel(::google::protobuf::int32 value) {
  set_has_senderlevel();
  senderlevel_ = value;
}

// optional uint64 receiverguid = 6;
inline bool GC_CHAT::has_receiverguid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GC_CHAT::set_has_receiverguid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GC_CHAT::clear_has_receiverguid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GC_CHAT::clear_receiverguid() {
  receiverguid_ = GOOGLE_ULONGLONG(0);
  clear_has_receiverguid();
}
inline ::google::protobuf::uint64 GC_CHAT::receiverguid() const {
  return receiverguid_;
}
inline void GC_CHAT::set_receiverguid(::google::protobuf::uint64 value) {
  set_has_receiverguid();
  receiverguid_ = value;
}

// optional string receivername = 7;
inline bool GC_CHAT::has_receivername() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GC_CHAT::set_has_receivername() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GC_CHAT::clear_has_receivername() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GC_CHAT::clear_receivername() {
  if (receivername_ != &::google::protobuf::internal::kEmptyString) {
    receivername_->clear();
  }
  clear_has_receivername();
}
inline const ::std::string& GC_CHAT::receivername() const {
  return *receivername_;
}
inline void GC_CHAT::set_receivername(const ::std::string& value) {
  set_has_receivername();
  if (receivername_ == &::google::protobuf::internal::kEmptyString) {
    receivername_ = new ::std::string;
  }
  receivername_->assign(value);
}
inline void GC_CHAT::set_receivername(const char* value) {
  set_has_receivername();
  if (receivername_ == &::google::protobuf::internal::kEmptyString) {
    receivername_ = new ::std::string;
  }
  receivername_->assign(value);
}
inline void GC_CHAT::set_receivername(const char* value, size_t size) {
  set_has_receivername();
  if (receivername_ == &::google::protobuf::internal::kEmptyString) {
    receivername_ = new ::std::string;
  }
  receivername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_CHAT::mutable_receivername() {
  set_has_receivername();
  if (receivername_ == &::google::protobuf::internal::kEmptyString) {
    receivername_ = new ::std::string;
  }
  return receivername_;
}
inline ::std::string* GC_CHAT::release_receivername() {
  clear_has_receivername();
  if (receivername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = receivername_;
    receivername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GC_CHAT::set_allocated_receivername(::std::string* receivername) {
  if (receivername_ != &::google::protobuf::internal::kEmptyString) {
    delete receivername_;
  }
  if (receivername) {
    set_has_receivername();
    receivername_ = receivername;
  } else {
    clear_has_receivername();
    receivername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GC_NOTICE

// required string notice = 1;
inline bool GC_NOTICE::has_notice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_NOTICE::set_has_notice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_NOTICE::clear_has_notice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_NOTICE::clear_notice() {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& GC_NOTICE::notice() const {
  return *notice_;
}
inline void GC_NOTICE::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void GC_NOTICE::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void GC_NOTICE::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_NOTICE::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  return notice_;
}
inline ::std::string* GC_NOTICE::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GC_NOTICE::set_allocated_notice(::std::string* notice) {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    delete notice_;
  }
  if (notice) {
    set_has_notice();
    notice_ = notice;
  } else {
    clear_has_notice();
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 filterRepeat = 2;
inline bool GC_NOTICE::has_filterrepeat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_NOTICE::set_has_filterrepeat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_NOTICE::clear_has_filterrepeat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_NOTICE::clear_filterrepeat() {
  filterrepeat_ = 0;
  clear_has_filterrepeat();
}
inline ::google::protobuf::int32 GC_NOTICE::filterrepeat() const {
  return filterrepeat_;
}
inline void GC_NOTICE::set_filterrepeat(::google::protobuf::int32 value) {
  set_has_filterrepeat();
  filterrepeat_ = value;
}

// -------------------------------------------------------------------

// GC_UPDATE_SCENE_INSTACTIVATION

// required int32 sceneclassid = 1;
inline bool GC_UPDATE_SCENE_INSTACTIVATION::has_sceneclassid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_UPDATE_SCENE_INSTACTIVATION::set_has_sceneclassid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_UPDATE_SCENE_INSTACTIVATION::clear_has_sceneclassid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_UPDATE_SCENE_INSTACTIVATION::clear_sceneclassid() {
  sceneclassid_ = 0;
  clear_has_sceneclassid();
}
inline ::google::protobuf::int32 GC_UPDATE_SCENE_INSTACTIVATION::sceneclassid() const {
  return sceneclassid_;
}
inline void GC_UPDATE_SCENE_INSTACTIVATION::set_sceneclassid(::google::protobuf::int32 value) {
  set_has_sceneclassid();
  sceneclassid_ = value;
}

// required int32 sceneinstcount = 2;
inline bool GC_UPDATE_SCENE_INSTACTIVATION::has_sceneinstcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_UPDATE_SCENE_INSTACTIVATION::set_has_sceneinstcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_UPDATE_SCENE_INSTACTIVATION::clear_has_sceneinstcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_UPDATE_SCENE_INSTACTIVATION::clear_sceneinstcount() {
  sceneinstcount_ = 0;
  clear_has_sceneinstcount();
}
inline ::google::protobuf::int32 GC_UPDATE_SCENE_INSTACTIVATION::sceneinstcount() const {
  return sceneinstcount_;
}
inline void GC_UPDATE_SCENE_INSTACTIVATION::set_sceneinstcount(::google::protobuf::int32 value) {
  set_has_sceneinstcount();
  sceneinstcount_ = value;
}

// repeated int32 sceneactivation = 3;
inline int GC_UPDATE_SCENE_INSTACTIVATION::sceneactivation_size() const {
  return sceneactivation_.size();
}
inline void GC_UPDATE_SCENE_INSTACTIVATION::clear_sceneactivation() {
  sceneactivation_.Clear();
}
inline ::google::protobuf::int32 GC_UPDATE_SCENE_INSTACTIVATION::sceneactivation(int index) const {
  return sceneactivation_.Get(index);
}
inline void GC_UPDATE_SCENE_INSTACTIVATION::set_sceneactivation(int index, ::google::protobuf::int32 value) {
  sceneactivation_.Set(index, value);
}
inline void GC_UPDATE_SCENE_INSTACTIVATION::add_sceneactivation(::google::protobuf::int32 value) {
  sceneactivation_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_UPDATE_SCENE_INSTACTIVATION::sceneactivation() const {
  return sceneactivation_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_UPDATE_SCENE_INSTACTIVATION::mutable_sceneactivation() {
  return &sceneactivation_;
}

// -------------------------------------------------------------------

// GS_CONNECTED_HEARTBEAT

// required int32 senderworldid = 1;
inline bool GS_CONNECTED_HEARTBEAT::has_senderworldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GS_CONNECTED_HEARTBEAT::set_has_senderworldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GS_CONNECTED_HEARTBEAT::clear_has_senderworldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GS_CONNECTED_HEARTBEAT::clear_senderworldid() {
  senderworldid_ = 0;
  clear_has_senderworldid();
}
inline ::google::protobuf::int32 GS_CONNECTED_HEARTBEAT::senderworldid() const {
  return senderworldid_;
}
inline void GS_CONNECTED_HEARTBEAT::set_senderworldid(::google::protobuf::int32 value) {
  set_has_senderworldid();
  senderworldid_ = value;
}

// required int32 receiverworldid = 2;
inline bool GS_CONNECTED_HEARTBEAT::has_receiverworldid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GS_CONNECTED_HEARTBEAT::set_has_receiverworldid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GS_CONNECTED_HEARTBEAT::clear_has_receiverworldid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GS_CONNECTED_HEARTBEAT::clear_receiverworldid() {
  receiverworldid_ = 0;
  clear_has_receiverworldid();
}
inline ::google::protobuf::int32 GS_CONNECTED_HEARTBEAT::receiverworldid() const {
  return receiverworldid_;
}
inline void GS_CONNECTED_HEARTBEAT::set_receiverworldid(::google::protobuf::int32 value) {
  set_has_receiverworldid();
  receiverworldid_ = value;
}

// -------------------------------------------------------------------

// SG_CONNECTED_HEARTBEAT

// required int32 senderworldid = 1;
inline bool SG_CONNECTED_HEARTBEAT::has_senderworldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SG_CONNECTED_HEARTBEAT::set_has_senderworldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SG_CONNECTED_HEARTBEAT::clear_has_senderworldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SG_CONNECTED_HEARTBEAT::clear_senderworldid() {
  senderworldid_ = 0;
  clear_has_senderworldid();
}
inline ::google::protobuf::int32 SG_CONNECTED_HEARTBEAT::senderworldid() const {
  return senderworldid_;
}
inline void SG_CONNECTED_HEARTBEAT::set_senderworldid(::google::protobuf::int32 value) {
  set_has_senderworldid();
  senderworldid_ = value;
}

// required int32 receiverworldid = 2;
inline bool SG_CONNECTED_HEARTBEAT::has_receiverworldid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SG_CONNECTED_HEARTBEAT::set_has_receiverworldid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SG_CONNECTED_HEARTBEAT::clear_has_receiverworldid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SG_CONNECTED_HEARTBEAT::clear_receiverworldid() {
  receiverworldid_ = 0;
  clear_has_receiverworldid();
}
inline ::google::protobuf::int32 SG_CONNECTED_HEARTBEAT::receiverworldid() const {
  return receiverworldid_;
}
inline void SG_CONNECTED_HEARTBEAT::set_receiverworldid(::google::protobuf::int32 value) {
  set_has_receiverworldid();
  receiverworldid_ = value;
}

// -------------------------------------------------------------------

// CG_MOVE

// required int32 poscount = 1;
inline bool CG_MOVE::has_poscount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_MOVE::set_has_poscount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_MOVE::clear_has_poscount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_MOVE::clear_poscount() {
  poscount_ = 0;
  clear_has_poscount();
}
inline ::google::protobuf::int32 CG_MOVE::poscount() const {
  return poscount_;
}
inline void CG_MOVE::set_poscount(::google::protobuf::int32 value) {
  set_has_poscount();
  poscount_ = value;
}

// repeated int32 posx = 2;
inline int CG_MOVE::posx_size() const {
  return posx_.size();
}
inline void CG_MOVE::clear_posx() {
  posx_.Clear();
}
inline ::google::protobuf::int32 CG_MOVE::posx(int index) const {
  return posx_.Get(index);
}
inline void CG_MOVE::set_posx(int index, ::google::protobuf::int32 value) {
  posx_.Set(index, value);
}
inline void CG_MOVE::add_posx(::google::protobuf::int32 value) {
  posx_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CG_MOVE::posx() const {
  return posx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CG_MOVE::mutable_posx() {
  return &posx_;
}

// repeated int32 posz = 3;
inline int CG_MOVE::posz_size() const {
  return posz_.size();
}
inline void CG_MOVE::clear_posz() {
  posz_.Clear();
}
inline ::google::protobuf::int32 CG_MOVE::posz(int index) const {
  return posz_.Get(index);
}
inline void CG_MOVE::set_posz(int index, ::google::protobuf::int32 value) {
  posz_.Set(index, value);
}
inline void CG_MOVE::add_posz(::google::protobuf::int32 value) {
  posz_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CG_MOVE::posz() const {
  return posz_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CG_MOVE::mutable_posz() {
  return &posz_;
}

// required int32 ismoving = 4;
inline bool CG_MOVE::has_ismoving() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CG_MOVE::set_has_ismoving() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CG_MOVE::clear_has_ismoving() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CG_MOVE::clear_ismoving() {
  ismoving_ = 0;
  clear_has_ismoving();
}
inline ::google::protobuf::int32 CG_MOVE::ismoving() const {
  return ismoving_;
}
inline void CG_MOVE::set_ismoving(::google::protobuf::int32 value) {
  set_has_ismoving();
  ismoving_ = value;
}

// required int64 marchid = 5;
inline bool CG_MOVE::has_marchid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CG_MOVE::set_has_marchid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CG_MOVE::clear_has_marchid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CG_MOVE::clear_marchid() {
  marchid_ = GOOGLE_LONGLONG(0);
  clear_has_marchid();
}
inline ::google::protobuf::int64 CG_MOVE::marchid() const {
  return marchid_;
}
inline void CG_MOVE::set_marchid(::google::protobuf::int64 value) {
  set_has_marchid();
  marchid_ = value;
}

// -------------------------------------------------------------------

// GC_MOVE

// required int32 serverid = 1;
inline bool GC_MOVE::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_MOVE::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_MOVE::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_MOVE::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 GC_MOVE::serverid() const {
  return serverid_;
}
inline void GC_MOVE::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
}

// required int32 poscount = 2;
inline bool GC_MOVE::has_poscount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_MOVE::set_has_poscount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_MOVE::clear_has_poscount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_MOVE::clear_poscount() {
  poscount_ = 0;
  clear_has_poscount();
}
inline ::google::protobuf::int32 GC_MOVE::poscount() const {
  return poscount_;
}
inline void GC_MOVE::set_poscount(::google::protobuf::int32 value) {
  set_has_poscount();
  poscount_ = value;
}

// repeated int32 posserial = 3;
inline int GC_MOVE::posserial_size() const {
  return posserial_.size();
}
inline void GC_MOVE::clear_posserial() {
  posserial_.Clear();
}
inline ::google::protobuf::int32 GC_MOVE::posserial(int index) const {
  return posserial_.Get(index);
}
inline void GC_MOVE::set_posserial(int index, ::google::protobuf::int32 value) {
  posserial_.Set(index, value);
}
inline void GC_MOVE::add_posserial(::google::protobuf::int32 value) {
  posserial_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_MOVE::posserial() const {
  return posserial_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_MOVE::mutable_posserial() {
  return &posserial_;
}

// repeated int32 posx = 4;
inline int GC_MOVE::posx_size() const {
  return posx_.size();
}
inline void GC_MOVE::clear_posx() {
  posx_.Clear();
}
inline ::google::protobuf::int32 GC_MOVE::posx(int index) const {
  return posx_.Get(index);
}
inline void GC_MOVE::set_posx(int index, ::google::protobuf::int32 value) {
  posx_.Set(index, value);
}
inline void GC_MOVE::add_posx(::google::protobuf::int32 value) {
  posx_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_MOVE::posx() const {
  return posx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_MOVE::mutable_posx() {
  return &posx_;
}

// repeated int32 posz = 5;
inline int GC_MOVE::posz_size() const {
  return posz_.size();
}
inline void GC_MOVE::clear_posz() {
  posz_.Clear();
}
inline ::google::protobuf::int32 GC_MOVE::posz(int index) const {
  return posz_.Get(index);
}
inline void GC_MOVE::set_posz(int index, ::google::protobuf::int32 value) {
  posz_.Set(index, value);
}
inline void GC_MOVE::add_posz(::google::protobuf::int32 value) {
  posz_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_MOVE::posz() const {
  return posz_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_MOVE::mutable_posz() {
  return &posz_;
}

// -------------------------------------------------------------------

// GC_STOP

// required int32 serverid = 1;
inline bool GC_STOP::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_STOP::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_STOP::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_STOP::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 GC_STOP::serverid() const {
  return serverid_;
}
inline void GC_STOP::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
}

// required int32 posserial = 2;
inline bool GC_STOP::has_posserial() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_STOP::set_has_posserial() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_STOP::clear_has_posserial() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_STOP::clear_posserial() {
  posserial_ = 0;
  clear_has_posserial();
}
inline ::google::protobuf::int32 GC_STOP::posserial() const {
  return posserial_;
}
inline void GC_STOP::set_posserial(::google::protobuf::int32 value) {
  set_has_posserial();
  posserial_ = value;
}

// required int32 posx = 3;
inline bool GC_STOP::has_posx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_STOP::set_has_posx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_STOP::clear_has_posx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_STOP::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline ::google::protobuf::int32 GC_STOP::posx() const {
  return posx_;
}
inline void GC_STOP::set_posx(::google::protobuf::int32 value) {
  set_has_posx();
  posx_ = value;
}

// required int32 posz = 4;
inline bool GC_STOP::has_posz() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GC_STOP::set_has_posz() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GC_STOP::clear_has_posz() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GC_STOP::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline ::google::protobuf::int32 GC_STOP::posz() const {
  return posz_;
}
inline void GC_STOP::set_posz(::google::protobuf::int32 value) {
  set_has_posz();
  posz_ = value;
}

// -------------------------------------------------------------------

// GC_TELEMOVE

// required int32 objId = 1;
inline bool GC_TELEMOVE::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_TELEMOVE::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_TELEMOVE::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_TELEMOVE::clear_objid() {
  objid_ = 0;
  clear_has_objid();
}
inline ::google::protobuf::int32 GC_TELEMOVE::objid() const {
  return objid_;
}
inline void GC_TELEMOVE::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// required int32 targetPosX = 2;
inline bool GC_TELEMOVE::has_targetposx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_TELEMOVE::set_has_targetposx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_TELEMOVE::clear_has_targetposx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_TELEMOVE::clear_targetposx() {
  targetposx_ = 0;
  clear_has_targetposx();
}
inline ::google::protobuf::int32 GC_TELEMOVE::targetposx() const {
  return targetposx_;
}
inline void GC_TELEMOVE::set_targetposx(::google::protobuf::int32 value) {
  set_has_targetposx();
  targetposx_ = value;
}

// required int32 targetPosZ = 3;
inline bool GC_TELEMOVE::has_targetposz() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_TELEMOVE::set_has_targetposz() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_TELEMOVE::clear_has_targetposz() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_TELEMOVE::clear_targetposz() {
  targetposz_ = 0;
  clear_has_targetposz();
}
inline ::google::protobuf::int32 GC_TELEMOVE::targetposz() const {
  return targetposz_;
}
inline void GC_TELEMOVE::set_targetposz(::google::protobuf::int32 value) {
  set_has_targetposz();
  targetposz_ = value;
}

// required int32 needChangeFaceto = 4;
inline bool GC_TELEMOVE::has_needchangefaceto() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GC_TELEMOVE::set_has_needchangefaceto() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GC_TELEMOVE::clear_has_needchangefaceto() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GC_TELEMOVE::clear_needchangefaceto() {
  needchangefaceto_ = 0;
  clear_has_needchangefaceto();
}
inline ::google::protobuf::int32 GC_TELEMOVE::needchangefaceto() const {
  return needchangefaceto_;
}
inline void GC_TELEMOVE::set_needchangefaceto(::google::protobuf::int32 value) {
  set_has_needchangefaceto();
  needchangefaceto_ = value;
}

// optional int32 animaId = 5;
inline bool GC_TELEMOVE::has_animaid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GC_TELEMOVE::set_has_animaid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GC_TELEMOVE::clear_has_animaid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GC_TELEMOVE::clear_animaid() {
  animaid_ = 0;
  clear_has_animaid();
}
inline ::google::protobuf::int32 GC_TELEMOVE::animaid() const {
  return animaid_;
}
inline void GC_TELEMOVE::set_animaid(::google::protobuf::int32 value) {
  set_has_animaid();
  animaid_ = value;
}

// -------------------------------------------------------------------

// GC_RET_USE_SKILL

// required int32 skillId = 1;
inline bool GC_RET_USE_SKILL::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_RET_USE_SKILL::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_RET_USE_SKILL::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_RET_USE_SKILL::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 GC_RET_USE_SKILL::skillid() const {
  return skillid_;
}
inline void GC_RET_USE_SKILL::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// required int32 senderId = 2;
inline bool GC_RET_USE_SKILL::has_senderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_RET_USE_SKILL::set_has_senderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_RET_USE_SKILL::clear_has_senderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_RET_USE_SKILL::clear_senderid() {
  senderid_ = 0;
  clear_has_senderid();
}
inline ::google::protobuf::int32 GC_RET_USE_SKILL::senderid() const {
  return senderid_;
}
inline void GC_RET_USE_SKILL::set_senderid(::google::protobuf::int32 value) {
  set_has_senderid();
  senderid_ = value;
}

// required int32 TargetId = 3;
inline bool GC_RET_USE_SKILL::has_targetid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_RET_USE_SKILL::set_has_targetid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_RET_USE_SKILL::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_RET_USE_SKILL::clear_targetid() {
  targetid_ = 0;
  clear_has_targetid();
}
inline ::google::protobuf::int32 GC_RET_USE_SKILL::targetid() const {
  return targetid_;
}
inline void GC_RET_USE_SKILL::set_targetid(::google::protobuf::int32 value) {
  set_has_targetid();
  targetid_ = value;
}

// optional int32 skillfailType = 4;
inline bool GC_RET_USE_SKILL::has_skillfailtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GC_RET_USE_SKILL::set_has_skillfailtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GC_RET_USE_SKILL::clear_has_skillfailtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GC_RET_USE_SKILL::clear_skillfailtype() {
  skillfailtype_ = 0;
  clear_has_skillfailtype();
}
inline ::google::protobuf::int32 GC_RET_USE_SKILL::skillfailtype() const {
  return skillfailtype_;
}
inline void GC_RET_USE_SKILL::set_skillfailtype(::google::protobuf::int32 value) {
  set_has_skillfailtype();
  skillfailtype_ = value;
}

// optional string skillname = 5;
inline bool GC_RET_USE_SKILL::has_skillname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GC_RET_USE_SKILL::set_has_skillname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GC_RET_USE_SKILL::clear_has_skillname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GC_RET_USE_SKILL::clear_skillname() {
  if (skillname_ != &::google::protobuf::internal::kEmptyString) {
    skillname_->clear();
  }
  clear_has_skillname();
}
inline const ::std::string& GC_RET_USE_SKILL::skillname() const {
  return *skillname_;
}
inline void GC_RET_USE_SKILL::set_skillname(const ::std::string& value) {
  set_has_skillname();
  if (skillname_ == &::google::protobuf::internal::kEmptyString) {
    skillname_ = new ::std::string;
  }
  skillname_->assign(value);
}
inline void GC_RET_USE_SKILL::set_skillname(const char* value) {
  set_has_skillname();
  if (skillname_ == &::google::protobuf::internal::kEmptyString) {
    skillname_ = new ::std::string;
  }
  skillname_->assign(value);
}
inline void GC_RET_USE_SKILL::set_skillname(const char* value, size_t size) {
  set_has_skillname();
  if (skillname_ == &::google::protobuf::internal::kEmptyString) {
    skillname_ = new ::std::string;
  }
  skillname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_RET_USE_SKILL::mutable_skillname() {
  set_has_skillname();
  if (skillname_ == &::google::protobuf::internal::kEmptyString) {
    skillname_ = new ::std::string;
  }
  return skillname_;
}
inline ::std::string* GC_RET_USE_SKILL::release_skillname() {
  clear_has_skillname();
  if (skillname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = skillname_;
    skillname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GC_RET_USE_SKILL::set_allocated_skillname(::std::string* skillname) {
  if (skillname_ != &::google::protobuf::internal::kEmptyString) {
    delete skillname_;
  }
  if (skillname) {
    set_has_skillname();
    skillname_ = skillname;
  } else {
    clear_has_skillname();
    skillname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GC_UPDATE_ANIMATION_STATE

// required int32 objId = 1;
inline bool GC_UPDATE_ANIMATION_STATE::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_UPDATE_ANIMATION_STATE::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_UPDATE_ANIMATION_STATE::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_UPDATE_ANIMATION_STATE::clear_objid() {
  objid_ = 0;
  clear_has_objid();
}
inline ::google::protobuf::int32 GC_UPDATE_ANIMATION_STATE::objid() const {
  return objid_;
}
inline void GC_UPDATE_ANIMATION_STATE::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// required int32 AnimationState = 2;
inline bool GC_UPDATE_ANIMATION_STATE::has_animationstate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_UPDATE_ANIMATION_STATE::set_has_animationstate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_UPDATE_ANIMATION_STATE::clear_has_animationstate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_UPDATE_ANIMATION_STATE::clear_animationstate() {
  animationstate_ = 0;
  clear_has_animationstate();
}
inline ::google::protobuf::int32 GC_UPDATE_ANIMATION_STATE::animationstate() const {
  return animationstate_;
}
inline void GC_UPDATE_ANIMATION_STATE::set_animationstate(::google::protobuf::int32 value) {
  set_has_animationstate();
  animationstate_ = value;
}

// optional int32 verticalOffDis = 3;
inline bool GC_UPDATE_ANIMATION_STATE::has_verticaloffdis() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_UPDATE_ANIMATION_STATE::set_has_verticaloffdis() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_UPDATE_ANIMATION_STATE::clear_has_verticaloffdis() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_UPDATE_ANIMATION_STATE::clear_verticaloffdis() {
  verticaloffdis_ = 0;
  clear_has_verticaloffdis();
}
inline ::google::protobuf::int32 GC_UPDATE_ANIMATION_STATE::verticaloffdis() const {
  return verticaloffdis_;
}
inline void GC_UPDATE_ANIMATION_STATE::set_verticaloffdis(::google::protobuf::int32 value) {
  set_has_verticaloffdis();
  verticaloffdis_ = value;
}

// optional int32 horizontalOffDis = 4;
inline bool GC_UPDATE_ANIMATION_STATE::has_horizontaloffdis() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GC_UPDATE_ANIMATION_STATE::set_has_horizontaloffdis() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GC_UPDATE_ANIMATION_STATE::clear_has_horizontaloffdis() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GC_UPDATE_ANIMATION_STATE::clear_horizontaloffdis() {
  horizontaloffdis_ = 0;
  clear_has_horizontaloffdis();
}
inline ::google::protobuf::int32 GC_UPDATE_ANIMATION_STATE::horizontaloffdis() const {
  return horizontaloffdis_;
}
inline void GC_UPDATE_ANIMATION_STATE::set_horizontaloffdis(::google::protobuf::int32 value) {
  set_has_horizontaloffdis();
  horizontaloffdis_ = value;
}

// optional int32 stateLastTime = 5;
inline bool GC_UPDATE_ANIMATION_STATE::has_statelasttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GC_UPDATE_ANIMATION_STATE::set_has_statelasttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GC_UPDATE_ANIMATION_STATE::clear_has_statelasttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GC_UPDATE_ANIMATION_STATE::clear_statelasttime() {
  statelasttime_ = 0;
  clear_has_statelasttime();
}
inline ::google::protobuf::int32 GC_UPDATE_ANIMATION_STATE::statelasttime() const {
  return statelasttime_;
}
inline void GC_UPDATE_ANIMATION_STATE::set_statelasttime(::google::protobuf::int32 value) {
  set_has_statelasttime();
  statelasttime_ = value;
}

// optional int32 stateResortTime = 6;
inline bool GC_UPDATE_ANIMATION_STATE::has_stateresorttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GC_UPDATE_ANIMATION_STATE::set_has_stateresorttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GC_UPDATE_ANIMATION_STATE::clear_has_stateresorttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GC_UPDATE_ANIMATION_STATE::clear_stateresorttime() {
  stateresorttime_ = 0;
  clear_has_stateresorttime();
}
inline ::google::protobuf::int32 GC_UPDATE_ANIMATION_STATE::stateresorttime() const {
  return stateresorttime_;
}
inline void GC_UPDATE_ANIMATION_STATE::set_stateresorttime(::google::protobuf::int32 value) {
  set_has_stateresorttime();
  stateresorttime_ = value;
}

// optional int32 hitTimes = 7;
inline bool GC_UPDATE_ANIMATION_STATE::has_hittimes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GC_UPDATE_ANIMATION_STATE::set_has_hittimes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GC_UPDATE_ANIMATION_STATE::clear_has_hittimes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GC_UPDATE_ANIMATION_STATE::clear_hittimes() {
  hittimes_ = 0;
  clear_has_hittimes();
}
inline ::google::protobuf::int32 GC_UPDATE_ANIMATION_STATE::hittimes() const {
  return hittimes_;
}
inline void GC_UPDATE_ANIMATION_STATE::set_hittimes(::google::protobuf::int32 value) {
  set_has_hittimes();
  hittimes_ = value;
}

// optional int32 hitInterval = 8;
inline bool GC_UPDATE_ANIMATION_STATE::has_hitinterval() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GC_UPDATE_ANIMATION_STATE::set_has_hitinterval() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GC_UPDATE_ANIMATION_STATE::clear_has_hitinterval() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GC_UPDATE_ANIMATION_STATE::clear_hitinterval() {
  hitinterval_ = 0;
  clear_has_hitinterval();
}
inline ::google::protobuf::int32 GC_UPDATE_ANIMATION_STATE::hitinterval() const {
  return hitinterval_;
}
inline void GC_UPDATE_ANIMATION_STATE::set_hitinterval(::google::protobuf::int32 value) {
  set_has_hitinterval();
  hitinterval_ = value;
}

// -------------------------------------------------------------------

// GC_DELETE_OBJ

// required int32 serverId = 1;
inline bool GC_DELETE_OBJ::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_DELETE_OBJ::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_DELETE_OBJ::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_DELETE_OBJ::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 GC_DELETE_OBJ::serverid() const {
  return serverid_;
}
inline void GC_DELETE_OBJ::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
}

// -------------------------------------------------------------------

// GC_ATTACKFLY

// required int32 objId = 1;
inline bool GC_ATTACKFLY::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_ATTACKFLY::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_ATTACKFLY::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_ATTACKFLY::clear_objid() {
  objid_ = 0;
  clear_has_objid();
}
inline ::google::protobuf::int32 GC_ATTACKFLY::objid() const {
  return objid_;
}
inline void GC_ATTACKFLY::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// required int32 Dis = 2;
inline bool GC_ATTACKFLY::has_dis() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_ATTACKFLY::set_has_dis() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_ATTACKFLY::clear_has_dis() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_ATTACKFLY::clear_dis() {
  dis_ = 0;
  clear_has_dis();
}
inline ::google::protobuf::int32 GC_ATTACKFLY::dis() const {
  return dis_;
}
inline void GC_ATTACKFLY::set_dis(::google::protobuf::int32 value) {
  set_has_dis();
  dis_ = value;
}

// required int32 Hight = 3;
inline bool GC_ATTACKFLY::has_hight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_ATTACKFLY::set_has_hight() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_ATTACKFLY::clear_has_hight() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_ATTACKFLY::clear_hight() {
  hight_ = 0;
  clear_has_hight();
}
inline ::google::protobuf::int32 GC_ATTACKFLY::hight() const {
  return hight_;
}
inline void GC_ATTACKFLY::set_hight(::google::protobuf::int32 value) {
  set_has_hight();
  hight_ = value;
}

// required int32 FlyTime = 4;
inline bool GC_ATTACKFLY::has_flytime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GC_ATTACKFLY::set_has_flytime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GC_ATTACKFLY::clear_has_flytime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GC_ATTACKFLY::clear_flytime() {
  flytime_ = 0;
  clear_has_flytime();
}
inline ::google::protobuf::int32 GC_ATTACKFLY::flytime() const {
  return flytime_;
}
inline void GC_ATTACKFLY::set_flytime(::google::protobuf::int32 value) {
  set_has_flytime();
  flytime_ = value;
}

// -------------------------------------------------------------------

// GC_FORCE_SETPOS

// required int32 ServerID = 1;
inline bool GC_FORCE_SETPOS::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_FORCE_SETPOS::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_FORCE_SETPOS::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_FORCE_SETPOS::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 GC_FORCE_SETPOS::serverid() const {
  return serverid_;
}
inline void GC_FORCE_SETPOS::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
}

// required int32 PosX = 2;
inline bool GC_FORCE_SETPOS::has_posx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_FORCE_SETPOS::set_has_posx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_FORCE_SETPOS::clear_has_posx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_FORCE_SETPOS::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline ::google::protobuf::int32 GC_FORCE_SETPOS::posx() const {
  return posx_;
}
inline void GC_FORCE_SETPOS::set_posx(::google::protobuf::int32 value) {
  set_has_posx();
  posx_ = value;
}

// required int32 PosZ = 3;
inline bool GC_FORCE_SETPOS::has_posz() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_FORCE_SETPOS::set_has_posz() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_FORCE_SETPOS::clear_has_posz() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_FORCE_SETPOS::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline ::google::protobuf::int32 GC_FORCE_SETPOS::posz() const {
  return posz_;
}
inline void GC_FORCE_SETPOS::set_posz(::google::protobuf::int32 value) {
  set_has_posz();
  posz_ = value;
}

// -------------------------------------------------------------------

// GC_UPDATE_NEEDIMPACTINFO

// required int32 objId = 1;
inline bool GC_UPDATE_NEEDIMPACTINFO::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_UPDATE_NEEDIMPACTINFO::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_UPDATE_NEEDIMPACTINFO::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_UPDATE_NEEDIMPACTINFO::clear_objid() {
  objid_ = 0;
  clear_has_objid();
}
inline ::google::protobuf::int32 GC_UPDATE_NEEDIMPACTINFO::objid() const {
  return objid_;
}
inline void GC_UPDATE_NEEDIMPACTINFO::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// repeated int32 impactId = 2;
inline int GC_UPDATE_NEEDIMPACTINFO::impactid_size() const {
  return impactid_.size();
}
inline void GC_UPDATE_NEEDIMPACTINFO::clear_impactid() {
  impactid_.Clear();
}
inline ::google::protobuf::int32 GC_UPDATE_NEEDIMPACTINFO::impactid(int index) const {
  return impactid_.Get(index);
}
inline void GC_UPDATE_NEEDIMPACTINFO::set_impactid(int index, ::google::protobuf::int32 value) {
  impactid_.Set(index, value);
}
inline void GC_UPDATE_NEEDIMPACTINFO::add_impactid(::google::protobuf::int32 value) {
  impactid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_UPDATE_NEEDIMPACTINFO::impactid() const {
  return impactid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_UPDATE_NEEDIMPACTINFO::mutable_impactid() {
  return &impactid_;
}

// repeated int32 impactLogicId = 3;
inline int GC_UPDATE_NEEDIMPACTINFO::impactlogicid_size() const {
  return impactlogicid_.size();
}
inline void GC_UPDATE_NEEDIMPACTINFO::clear_impactlogicid() {
  impactlogicid_.Clear();
}
inline ::google::protobuf::int32 GC_UPDATE_NEEDIMPACTINFO::impactlogicid(int index) const {
  return impactlogicid_.Get(index);
}
inline void GC_UPDATE_NEEDIMPACTINFO::set_impactlogicid(int index, ::google::protobuf::int32 value) {
  impactlogicid_.Set(index, value);
}
inline void GC_UPDATE_NEEDIMPACTINFO::add_impactlogicid(::google::protobuf::int32 value) {
  impactlogicid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_UPDATE_NEEDIMPACTINFO::impactlogicid() const {
  return impactlogicid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_UPDATE_NEEDIMPACTINFO::mutable_impactlogicid() {
  return &impactlogicid_;
}

// repeated int32 isForever = 4;
inline int GC_UPDATE_NEEDIMPACTINFO::isforever_size() const {
  return isforever_.size();
}
inline void GC_UPDATE_NEEDIMPACTINFO::clear_isforever() {
  isforever_.Clear();
}
inline ::google::protobuf::int32 GC_UPDATE_NEEDIMPACTINFO::isforever(int index) const {
  return isforever_.Get(index);
}
inline void GC_UPDATE_NEEDIMPACTINFO::set_isforever(int index, ::google::protobuf::int32 value) {
  isforever_.Set(index, value);
}
inline void GC_UPDATE_NEEDIMPACTINFO::add_isforever(::google::protobuf::int32 value) {
  isforever_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_UPDATE_NEEDIMPACTINFO::isforever() const {
  return isforever_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_UPDATE_NEEDIMPACTINFO::mutable_isforever() {
  return &isforever_;
}

// repeated int32 remainTime = 5;
inline int GC_UPDATE_NEEDIMPACTINFO::remaintime_size() const {
  return remaintime_.size();
}
inline void GC_UPDATE_NEEDIMPACTINFO::clear_remaintime() {
  remaintime_.Clear();
}
inline ::google::protobuf::int32 GC_UPDATE_NEEDIMPACTINFO::remaintime(int index) const {
  return remaintime_.Get(index);
}
inline void GC_UPDATE_NEEDIMPACTINFO::set_remaintime(int index, ::google::protobuf::int32 value) {
  remaintime_.Set(index, value);
}
inline void GC_UPDATE_NEEDIMPACTINFO::add_remaintime(::google::protobuf::int32 value) {
  remaintime_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_UPDATE_NEEDIMPACTINFO::remaintime() const {
  return remaintime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_UPDATE_NEEDIMPACTINFO::mutable_remaintime() {
  return &remaintime_;
}

// repeated int32 isAdd = 6;
inline int GC_UPDATE_NEEDIMPACTINFO::isadd_size() const {
  return isadd_.size();
}
inline void GC_UPDATE_NEEDIMPACTINFO::clear_isadd() {
  isadd_.Clear();
}
inline ::google::protobuf::int32 GC_UPDATE_NEEDIMPACTINFO::isadd(int index) const {
  return isadd_.Get(index);
}
inline void GC_UPDATE_NEEDIMPACTINFO::set_isadd(int index, ::google::protobuf::int32 value) {
  isadd_.Set(index, value);
}
inline void GC_UPDATE_NEEDIMPACTINFO::add_isadd(::google::protobuf::int32 value) {
  isadd_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_UPDATE_NEEDIMPACTINFO::isadd() const {
  return isadd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_UPDATE_NEEDIMPACTINFO::mutable_isadd() {
  return &isadd_;
}

// -------------------------------------------------------------------

// GC_PLAY_EFFECT

// required int32 ObjID = 1;
inline bool GC_PLAY_EFFECT::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_PLAY_EFFECT::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_PLAY_EFFECT::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_PLAY_EFFECT::clear_objid() {
  objid_ = 0;
  clear_has_objid();
}
inline ::google::protobuf::int32 GC_PLAY_EFFECT::objid() const {
  return objid_;
}
inline void GC_PLAY_EFFECT::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// required int32 EffectID = 2;
inline bool GC_PLAY_EFFECT::has_effectid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_PLAY_EFFECT::set_has_effectid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_PLAY_EFFECT::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_PLAY_EFFECT::clear_effectid() {
  effectid_ = 0;
  clear_has_effectid();
}
inline ::google::protobuf::int32 GC_PLAY_EFFECT::effectid() const {
  return effectid_;
}
inline void GC_PLAY_EFFECT::set_effectid(::google::protobuf::int32 value) {
  set_has_effectid();
  effectid_ = value;
}

// -------------------------------------------------------------------

// GC_REMOVEEFFECT

// required int32 objId = 1;
inline bool GC_REMOVEEFFECT::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_REMOVEEFFECT::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_REMOVEEFFECT::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_REMOVEEFFECT::clear_objid() {
  objid_ = 0;
  clear_has_objid();
}
inline ::google::protobuf::int32 GC_REMOVEEFFECT::objid() const {
  return objid_;
}
inline void GC_REMOVEEFFECT::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// required int32 effectId = 2;
inline bool GC_REMOVEEFFECT::has_effectid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_REMOVEEFFECT::set_has_effectid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_REMOVEEFFECT::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_REMOVEEFFECT::clear_effectid() {
  effectid_ = 0;
  clear_has_effectid();
}
inline ::google::protobuf::int32 GC_REMOVEEFFECT::effectid() const {
  return effectid_;
}
inline void GC_REMOVEEFFECT::set_effectid(::google::protobuf::int32 value) {
  set_has_effectid();
  effectid_ = value;
}

// -------------------------------------------------------------------

// CG_FIGHT

// required int32 SceneID = 1;
inline bool CG_FIGHT::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_FIGHT::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_FIGHT::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_FIGHT::clear_sceneid() {
  sceneid_ = 0;
  clear_has_sceneid();
}
inline ::google::protobuf::int32 CG_FIGHT::sceneid() const {
  return sceneid_;
}
inline void CG_FIGHT::set_sceneid(::google::protobuf::int32 value) {
  set_has_sceneid();
  sceneid_ = value;
}

// required int32 Type = 2;
inline bool CG_FIGHT::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CG_FIGHT::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CG_FIGHT::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CG_FIGHT::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CG_FIGHT::type() const {
  return type_;
}
inline void CG_FIGHT::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int64 AttackId = 3;
inline bool CG_FIGHT::has_attackid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CG_FIGHT::set_has_attackid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CG_FIGHT::clear_has_attackid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CG_FIGHT::clear_attackid() {
  attackid_ = GOOGLE_LONGLONG(0);
  clear_has_attackid();
}
inline ::google::protobuf::int64 CG_FIGHT::attackid() const {
  return attackid_;
}
inline void CG_FIGHT::set_attackid(::google::protobuf::int64 value) {
  set_has_attackid();
  attackid_ = value;
}

// optional int64 DefenceId = 4;
inline bool CG_FIGHT::has_defenceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CG_FIGHT::set_has_defenceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CG_FIGHT::clear_has_defenceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CG_FIGHT::clear_defenceid() {
  defenceid_ = GOOGLE_LONGLONG(0);
  clear_has_defenceid();
}
inline ::google::protobuf::int64 CG_FIGHT::defenceid() const {
  return defenceid_;
}
inline void CG_FIGHT::set_defenceid(::google::protobuf::int64 value) {
  set_has_defenceid();
  defenceid_ = value;
}

// -------------------------------------------------------------------

// CG_LEAVE_COPYSCENE

// required int32 noParam = 1;
inline bool CG_LEAVE_COPYSCENE::has_noparam() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_LEAVE_COPYSCENE::set_has_noparam() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_LEAVE_COPYSCENE::clear_has_noparam() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_LEAVE_COPYSCENE::clear_noparam() {
  noparam_ = 0;
  clear_has_noparam();
}
inline ::google::protobuf::int32 CG_LEAVE_COPYSCENE::noparam() const {
  return noparam_;
}
inline void CG_LEAVE_COPYSCENE::set_noparam(::google::protobuf::int32 value) {
  set_has_noparam();
  noparam_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CG_LOGIN_VALIDATETYPE>() {
  return ::CG_LOGIN_VALIDATETYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GC_LOGIN_RET_LOGINRESULT>() {
  return ::GC_LOGIN_RET_LOGINRESULT_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GC_LOGIN_RET_VALIDATERESULT>() {
  return ::GC_LOGIN_RET_VALIDATERESULT_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CG_CHAT_CHATTYPE>() {
  return ::CG_CHAT_CHATTYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GC_CHAT_CHATTYPE>() {
  return ::GC_CHAT_CHATTYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PBMessage_2eproto__INCLUDED
